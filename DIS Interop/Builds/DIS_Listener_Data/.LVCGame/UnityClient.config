#----------------------------------------------------
# Game Client Configuration
#----------------------------------------------------

# Controls the logging detail writen to LVCGame.log
#
# Note that a verbose logging level such as DEBUG or
# DATA will affect perfomance and should not be turned
# on during normal operations.
#
# Possible values are:
# 	LogSeverity =DATA|DEBUG|INFO|WARNING|ERROR|OFF
LogSeverity = INFO

# The distance (in metres) an entity needs to move from its
# previous position before an update is logged in the
# database. This value must be an integer (a whole number).
#
EntityDistanceThreshold=10

# The time (in seconds) which must be exceeded since the last
# update was sent before a new update is logged in the database.
# This value must be an integer (a whole nunmber).
#
EntityTimeThreshold=60

# If set to true, duplicate messages wont appear in
# in the log file.
#
DisableDuplicateLogMessages=false

# Points to the License file to use for LVCGame
#
LicenseFile = LVC_Game_Unity.lic

# Specifies the list of plugins to load.
#
# Plugins are loaded and initialised with their configuration
# files, specified as 'plugin.dll:plugin.cfg'. You may specify
# multiple unique plugins with a comma delimiter, such as
#
# Plugins=pluginA.dll:confA.cfg,pluginB.dll:confB.cfg
#
# Note that middleware plugins are located under the 'lib' folder
# and configuration files are located inside the 'config' folder.
Plugins = DIS.dll : DIS\DIS.config, LVCWebInterface.dll : LVCWebInterface\LVCWebInterface.config
#Plugins = DIS.dll : DIS\DIS.config

# Defines the maximum time spent releasing events to the game. Time is in milliseconds
MaxTickTime = 50

# Defines the algorithm used to limited the amount of time to release async events to the game
#
#   0 -> No time limits apply. All events will be released
#   1 -> After the time limit expires any remaining events are dropped from the queue
#   2 -> After the time limit expires, any remaining events remain in the queue until next time
AsyncReleaseAlgorithm = 0

# Origin offset
#
# For maps that don't contain any origin offset information,
# use the following keys to control the origin.
#
# Offsets may be specified as Lat/Long or UTM, see below for
# examples:
#
#OriginLatitude=34*36'30.28939"
#OriginLongitude=69*44'20.53147"
OriginEasting=569172.0775
OriginNorthing=3829006.1465
OriginZone=42
OriginHemisphere=N
OriginAltitude=0;

# Altitude offset
#
# Adjust this value to raise or lower the Game map
# by a consistent amount for all entities
AltitudeOffset = 0

# Closest entity type matching
#
# Enabling this option allows generic matching
# of LVC enumerations to Game entity models
# based on closest match. For example, if
# an LVC enumeration isn't matched exactly,
# a best match procedure is engaged to recursively strip
# and ignore the lower fields of the LVC enumeration
# until a match is found.
#
EntityMatching=1

# Registered Dead reckoning algorithms (outgoing).
#
# The DRAlgorithm is used by the game client to track the movement of a local
# entity on external games. The local game client is able to track a entity, by
# extrapolating its dead reckoned state.  This is done according to each dead reckoning
# type registered under the DRAlgorithm. Once the local game client calculates a
# dead reckoned value above a specifed threshold, it will dispatch an information
# packet containing the actual entity state.
# Please Specify the DRAlgorithm with the following values:
#
#       2 -> FPW
#       3 -> RPW
#       4 -> RVW
#       5 -> FVW
#       6 -> FPB
#       7 -> RPB
#       8 -> RVB
#       9 -> FVB
#
# Note that the value '1' corresponds to STATIC, or no dead reckoning, and is
# automatically registered by default.
#
# Multiple algorithms may be specified with a list of comma separated values.
# Note that you should only specify multiple algorithms when your plugins require
# different (outgoing) dead reckoning data. Incoming data will automatically use
# the dead reckoning type specified by the remote simulation entity.
#
# After selecting the preferred DRAlgorithm types, confirm that the 'outgoingDRType'
# for every supported plugin is listed in the DRAlgorithm property.
#
DRAlgorithms = 2

# Dead reckoning position absolute threshold (outgoing).
#
# This value is used to trigger an outgoing update when the absolute deviation
# between the simulated and calculated position exceeds the spefified amount.
#
# Note that the DRAbsoluteThreshold key is appended with the algorithm type it
# is for, such as DRAbsoluteThreshold2=<value>
DRAbsoluteThreshold2 = 1.0
DRAbsoluteThreshold3 = 1.0
DRAbsoluteThreshold4 = 1.0
DRAbsoluteThreshold5 = 1.0
DRAbsoluteThreshold6 = 1.0
DRAbsoluteThreshold7 = 1.0
DRAbsoluteThreshold8 = 1.0
DRAbsoluteThreshold9 = 1.0

# Dead reckoning Bounding box threshold ratio (outgoing).
#
# This value is used to trigger an outgoing update when x,y or z diverge
# between simulated/calculated by at least the ratio of the entity bounding box.
#
# Note that the key DRBoundingBoxRatio is appended with the algorithm type it is
# for, such as DRBoundingBoxRatio2=<value>
DRBoundingBoxRatio2 = 0.5
DRBoundingBoxRatio3 = 0.5
DRBoundingBoxRatio4 = 0.5
DRBoundingBoxRatio5 = 0.5
DRBoundingBoxRatio6 = 0.5
DRBoundingBoxRatio7 = 0.5
DRBoundingBoxRatio8 = 0.5
DRBoundingBoxRatio9 = 0.5

# Dead Reckoning orientation threshold (outgoing).
#
# Specifies the maximum orientation deviation between simulated/calculated
# to trigger an outgoing update for an entity (radians).
#
# Note that the key DROrientationThreshold is appended with the algorithm type
# it is for, such as DROrientationThreshold=<value>
DROrientationThreshold2 = 0.0175
DROrientationThreshold3 = 0.0175
DROrientationThreshold4 = 0.0175
DROrientationThreshold5 = 0.0175
DROrientationThreshold6 = 0.0175
DROrientationThreshold7 = 0.0175
DROrientationThreshold8 = 0.0175
DROrientationThreshold9 = 0.0175

# Dead Reckoning Smoothing Correction Factor
#
# When new updates are received, position information is smoothed by applying
# a Corection Factor to limit the "jumps". The Correction Factor is applied
# to minimise the difference between the calculated and newly received
# entity position information over a specified time interval (see
# DRSmoothingTimeWindow).
#
# Acceptable values for this key are floats in the range of [0, 1].
#
# To turn off smoothing, set DRCorrectionFactor to zero, to obtain better
# smoothing increase the correction factor closer to 1.0.
#
DRCorrectionFactor = 1.0

# Dead Reckoning Smoothing Time Window
#
# Specifies the Time Window over which a Dead Reckoning correction should be
# applied to smooth the path of all remote entities so they don't appear
# to jump when new updates are received.
#
# The Time specified is in seconds, as a floating point. Set to zero if no
# smoothing is desired.
#
DRSmoothingTimeWindow = 3.0


# Dead Reckoning Smoothing Limit
#
# Specifies a distance in metres that if the new and old positions exceed,
# the entity will not be smoothed, but just jump to the new position. This
# is desired for more realistic updates of newly created entities.
#
DRSmoothingLimit = 10000

# Dead Reckoning Articulation Linear Threshold
#
# An update will be triggered when the anglular position of an articulation
# has moved a certain percentage from its last recorded state.
#
# If a threshold of 25% (0.25) is set, the articulation must move 90degrees in order
# for an update to be sent.
DRArticulationLinearThreshold = 0.05