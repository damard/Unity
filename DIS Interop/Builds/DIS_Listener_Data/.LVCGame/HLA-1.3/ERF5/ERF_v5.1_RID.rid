;; =============================================================================
;; Filename:      ERF_v5.1_RID.rid
;; Federation:    ERF v5.1
;; Version:       5.1
;; Date:          3 September 2008
;; POC:           Bryan Youmans
;; POC email:     byoumans@mitre.org
;;
;; Change Description:
;; 09/03/08
;;	- date and name updated for ERF 5.1 MR
;; 04/17/08
;;	- date and name updated for IE 5
;; 01/11/08
;;	- Added FIRESIM, EADSIM, and JSPA to ConnectionlessFederateID section
;;
;;	- Updated FederationSection.Networking.BundlingOptions.UDP.MaxBytesBeforeSend
;;	from 1200 to 900
;;	
;;	- Updated FederationSection.Networking.MulticastOptions.SocketSendBufferSize
;;	from 1048570 to 8388608
;;
;;	- Updated FederationSection.Networking.MulticastOptions.SocketReceiveBufferSize
;;	from 1048570 to 8388608
;;
;;	- Updated MC02StrategyOptions section to split "human_space" into "blue_human_space",
;;	"red_human_space", and "green_human_space", and to add "nonkinetic_space"
;;
;;	- Added parameter 
;;	FederationSection.DataDistribution.MC02StrategyOptions.FilenameForMulticastChannelMapping
;;
;;	- Added parameter FederationSection.Connectionless.FederationHandleLogFile
;;
;; 06/07/07
;; 	- Added 1 additional SIMPLE and 3 HLAnalyzers to
;;      ConnectionlessFederateID section
;; =============================================================================
;; 
;; 
;; RTI Next Generation RID (Run-Time Initialization Data) File
;; ===========================================================
;; This file contains configuration parameters that control the operation of the
;; RTI software.  All parameters have a default setting that is used in the
;; event that a parameter value is not specified in the RID file or a RID file
;; is not specified.
;;
;; File Location
;; =============
;; The RTI-NG software looks for the environment variable, RTI_RID_FILE, which
;; defines the name and location of the RID file to be used by the application.
;; The file location may be absolute or relative using the appropriate file
;; naming convention for the particular operating system.  The file name is not
;; required to have a special name or prefix, it only needs to be readable by
;; the application and provide the correct syntax.
;;
;; If the environment variable is not set, the RTI will attempt to open a file
;; named "RTI.rid" in the directory from which the application was launched.
;;
;; File Format
;; ===========
;; The format used for the RID file has only several rules relative to valid
;; parsing.  The first item is that any text to the right of the comment token,
;; (two semi-colons, ";;"), is ignored by the parser.  The next rule is that the
;; left and right parentheses are used for scoping and must always be used in
;; matching pairs.
;;
;; Within a pair of parentheses there can be the scope name or a parameter name
;; and value pair.  The scope name is used to organize parameters that are
;; conceptually related and ensure uniqueness in case a parameter name is used
;; multiple times within different scopes.  If a parameter name is not unique
;; only the last value will be used for the configuration control.  The
;; parameter name is case insensitive and the value is parsed as a character
;; string and subsequently interpreted according to the particular parameter
;; type (e.g., integer, floating point, string).
;;
;; Parameter Scoping
;; =================
;; Each RID parameter is identified by a scope name in which the scoping is
;; broken into three major categories according to the granularity of the
;; internal RTI components.  The RTI-NG instantiates components when an RTI
;; process is initially started (the first create or join), when a federation
;; comes into existence within the process (first create or join of a new
;; federation), and when a particular federate joins a federation.  These scope
;; names are defined below.
;;
;;  ProcessSection    - process level component parameters
;;  FederationSection - federation level component parameters
;;  FederateSection   - federate level component parameters
;;
;; It is possible that a RID file used by a particular application will need to
;; support multiple federations and federates within a single process using
;; different RID parameter values for each federation or federate.  This RID
;; structure can support this situation by creating a scope within the
;; federation or federate section with the scope name the same as the name of
;; the federation or name of the federate, respectively.
;;
;; As an example, assume that an application needs to support two different
;; federations named FederationA and FederationB.  The RID parameter for the
;; multicast base address for FederationA needs to be different from
;; FederationB.  An example RID is shown below where the BaseAddress used for
;; FederationB is "224.100.0.1" and for any other federations the value is
;; "224.2.0.1".
;;
;;  (FederationSection
;;     ...
;;     (BaseAddress 224.2.0.1)
;;     ...
;;     (FederationB
;;        ...
;;        (BaseAddress 224.100.0.1)       
;;        ...
;;     )
;;  )
;;
;; There are a few parameters that can be specified at a federate level.  For
;; these, an example is shown below:
;;
;;  (FederationSection
;;     ...
;;     (MinimumCacheSizeBeforePerformingPurge 32000)  ;; All federations except
;;                                                    ;; FederationB
;;     (ConnectionlessFederateID 3200,3201)	      ;; federate IDs (2nd one for the
;;						      ;; shadow MOM federate)
;;					              ;; to be used in 
;;                                                    ;; connection-less mode
;;						      ;; except for federates in
;;                                                    ;; FederationB
;;     ...
;;     (FederationB
;;        ...
;;        (MinimumCacheSizeBeforePerformingPurge 32000) ;; All Federates in FederationB
;;                                                      ;; except federateC 
;;        (ConnectionlessFederateID 3300,3301)		;; federate IDs (2nd one for the
;;                                                      ;; shadow MOM federate)
;;						        ;; to be used by a
;;							;; federate in FederationB, except
;;                                                      ;; FederateC,  when in 
;;                                                      ;; connection-less mode
;;        ...
;;        (FederateSection
;;           (FederateC
;;              ...
;;              (MinimumCacheSizeBeforePerformingPurge 32000) ;; for FederateC
;;                                                            ;; only
;;              (ConnectionlessFederateID 3410,3411)	      ;; federate IDs (2nd one 
;;							      ;; for the shadow MOM 
;;							      ;; federate) to be used by
;;							      ;; FederateC when in 
;;                                                            ;; connection-less mode
;;              ...
;;           )
;;        )
;;     )
;;  )
;;
;; Parameter Definition
;; ====================
;; Each parameter contained in the RID file provides a description of the effect
;; that the parameter value has on the operation of the RTI.  The valid
;; parameter values are defined and the default value is specified within this
;; file.  As previously mentioned, if the parameter and value is not specified
;; within the RID file the default value will be used by the RTI.

(RTI
 ;; The RTI scope serves as a namespace for the RID user parameters.  No
 ;; parameter entries should be made at this level.
 
 (ProcessSection
  ;; Entries in this section apply to the process level components.

  ;; PARAMETER: ProcessSection.RTIMode
  ;; DESCRIPTION: When set to "connectionless", the RTI will initialize into
  ;; a connectionless state.  This special state eliminates all connected 
  ;; components such as TCP.  As such, the rtiexec is not needed to run in
  ;; connectionless mode.  HOWEVER, many RTI services must be sacrificed in
  ;; order to achieve a connectionless state including reliable updates &
  ;; interactions, ownership management, save & restore, synchronization, 
  ;; and time management.  The use of any of the above features is
  ;; prohibited while in "connectionless" mode.  Therefore, special
  ;; consideration must be given to federations wishing to use this mode.
  ;; Connectionless may be useful for federations with unreliable networks.
  ;; Most users should use the default "standard" setting.
  ;; RANGE: An enumeration value {Standard, Connectionless}
  ;; CONSISTENCY: This parameter must be consistent across the federation.
  ;; DEFAULT VALUE: Standard.
  ;;
  (RTIMode Connectionless)

  (RtiExecutive
   ;; The RTI Executive is a logically centralized process that is used as a
   ;; network wide resource manager to handle such items as the uniqueness of
   ;; federation names.  It is logically centralized since redundant processes
   ;; can be used for fault tolerance (although this feature is currently not
   ;; supported).  The parameters associated with the RTI Executive control
   ;; how the process is found on the network.

   ;; PARAMETER: ProcessSection.RtiExecutive.RtiExecutiveEndpoint
   ;; DESCRIPTION: The RTI Executive endpoint defines the network address and
   ;; port number used by the RTI Executive process (and hence the RTI Naming 
   ;; Service).  The network address can be a hostname or an IP address.  The 
   ;; endpoint is only necessary when the multicast discovery mechanism is not 
   ;; used and the endpoint must match the value provided when the RTI Executive 
   ;; process is started.
   ;; RANGE: A valid hostname or IP address followed by a colon and then the
   ;; port number.
   ;; CONSISTENCY: This parameter is checked for consistency across the federation.
   ;; DEFAULT VALUE: None, will use multicast discovery mechanism.
   ;;
   ;;;;   (RtiExecutiveEndpoint hostname:port)

   ;; PARAMETER: ProcessSection.RtiExecutive.
   ;;            RtiExecutiveMulticastDiscoveryEndpoint
   ;; DESCRIPTION: The RTI Executive discovery parameter defines the multicast
   ;; address and port number used for the multicast discovery protocol to find
   ;; the RTI Naming Service which is located in the RTI Executive process
   ;; The naming service will then enable the application to locate distributed 
   ;; RTI components (e.g., RTI Executive).
   ;; RANGE: A valid multicast IP address (or hostname) followed by a colon and
   ;; then the port number.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: 224.9.9.2:22605
   ;;
   ;;;;   (RtiExecutiveMulticastDiscoveryEndpoint 224.9.9.2:22605)

   ;; PARAMETER: ProcessSection.RtiExecutive.NumberOfAttemptsToFindRtiExecutive
   ;; DESCRIPTION: The NumberAttemptsToFindRtiExecutive parameter is used to
   ;; control how many attempts the application should use to locate the RTI
   ;; Naming Service using the multicast discovery mechanism.
   ;; RANGE: An integer value greater than zero.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: 10
   ;;
   ;;;;   (NumberOfAttemptsToFindRtiExecutive 10)

   ;; PARAMETER: ProcessSection.RtiExecutive.TimeToWaitAfterEachAttemptInSeconds
   ;; DESCRIPTION: The TimeToWaitAfterEachAttemptInSeconds parameter is used to
   ;; control how long the application should wait between attempts to find the
   ;; RTI Executive using the multicast discovery mechanism.
   ;; RANGE: An floating point value greater than zero.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: 1.0
   ;;
   ;;;;   (TimeToWaitAfterEachAttemptInSeconds 1.0)
   );; End of ProcessSection.RtiExecutive

  (Networking
   ;; The Networking section is used to define the communication configuration
   ;; information associated with all of the RTI components within the
   ;; application using this RID file.

   ;; PARAMETER: ProcessSection.Networking.FederateEndpoint
   ;; DESCRIPTION: The Networking endpoint defines the network address and port
   ;; number used by the federate application process using this RID file.  The
   ;; network address can be a hostname or an IP address.  The federate endpoint
   ;; is used by other distributed RTI components to communicate with internal
   ;; modules within this application.  Typically the federate endpoint does not
   ;; need to be defined unless the computer has multiple network interfaces.
   ;; If an environmental variable named RTI_FEDERATE_ENDPOINT is found, its 
   ;; value will be used in favor of what is specified here.
   ;; RANGE: A valid hostname or IP address followed by a colon and then the
   ;; port number.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: The default network card and the port.
   ;;
   ;;;;   (FederateEndpoint hostname:port)

   (MulticastOptions
    ;; The networking multicast options define the parameters that control the
    ;; behavior of UDP communication within the RTI that is used for Best Effort
    ;; transport.

    ;; PARAMETER: ProcessSection.Networking.MulticastOptions.PerformCrcChecking
    ;; DESCRIPTION: When PerformCrcChecking is set to yes, CRC checking is
    ;; performed on all messages sent/received via multicast.  Messages failing
    ;; the CRC check are discarded.  Note that CRC checking can be
    ;; computationally expensive and should only be turned on if you suspect
    ;; that your network hardware is not functioning properly.
    ;; RANGE: An enumeration value {Yes, No}
    ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
    ;; DEFAULT VALUE: No.
    ;;
    (PerformCrcChecking Yes)

    ;; PARAMETER: ProcessSection.Networking.MulticastOptions.Interface
    ;; DESCRIPTION: The Interface is used to specify which ethernet
    ;; interface shall be used to send and receive multicast traffic. On
    ;; most systems the possible interfaces can be listed with the netstat
    ;; command.  If no interface is specified, the default is used. The interface
    ;; should be specified using the interface name (e.g., eth0) for unix systems 
    ;; and the IP address for Windows systems.
    ;; NOTE: This parameter does not effect multicast name service discovery.
    ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
    ;; DEFAULT VALUE: None.
    ;;
    ;;;;   (Interface "eth0")

    (Fragmentation
     ;; The UDP communication protocol (used for Best Effort transport) does
     ;; not fragment and reassemble data.  For messages larger than the UDP
     ;; fragmentation size the RTI must fragment the message into smaller
     ;; packets on the send side and then reassemble the packets on the
     ;; receiver side.

     ;; PARAMETER: ProcessSection.Networking.MulticastOptions.Fragmentation.FragmentSize
     ;; DESCRIPTION: The FragmentSize is used to define the maximum number of
     ;; bytes that can be used as the payload in a UDP packet.  Different 
     ;; networks may be capable of supporting different UDP Maximum Transfer
     ;; Unit (MTU) values.
     ;; RANGE: An integer greater than zero representing the number of bytes.
     ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
     ;; DEFAULT VALUE: 63000
     ;;
     ;;;;     (FragmentSize 63000)

     ;; PARAMETER: ProcessSection.Networking.MulticastOptions.Fragmentation.ReassemblyTimerIntervalInSeconds
     ;; DESCRIPTION: TheReassmeblyTimerIntervalInSeconds parameter is used to control how long
     ;; control how long the receiver will wait to receive all of the fragments
     ;; that make up a single message.  Since UDP is not a reliable communication
     ;; protocol the fragments can be lost and the receiver needs to know how long
     ;; to wait before discarding incomplete fragments.  For performance reasons
     ;; the RTI does not create a timer for each fragment set, instead a common
     ;; timer is used and each incomplete fragment set is incremented and removed
     ;; after MaxTimeouts.
     ;; RANGE: A floating point value greater than zero.
     ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
     ;; DEFAULT VALUE: 1.0
     ;;
     ;;;;     (ReassemblyTimerIntervalInSeconds 1.0)

     ;; PARAMETER: ProcessSection.Networking.MulticastOptions.Fragmentation.MaxTimeouts
     ;; DESCRIPTION: The MaxTimeouts parameter is used to control how long the
     ;; receiver will wait to receive all of the fragments that make up a
     ;; single message.  Since UDP is not a reliable communication protocol the
     ;; fragments can be lost and the receiver needs to know how long to wait
     ;; before discarding incomplete fragments.  For performance reasons the RTI
     ;; does not create a timer for each fragment set, instead a common timer is
     ;; used and each incomplete fragment set is incremented and removed after
     ;; MaxTimeouts.
     ;; RANGE: An integer value greater than zero.
     ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
     ;; DEFAULT VALUE: 3
     ;;
     ;;;;     (MaxTimeouts 3)
     );; End of ProcessSection.Networking.MulticastOptions.Fragmentation
    );; End of ProcessSection.Networking.MulticastOptions
   );; End of ProcessSection.Networking

  (ProcessModel
   ;; The process model controls the mechanism used by the RTI to obtain
   ;; processing cycles and support callbacks to the federate during the tick
   ;; call.

   ;; PARAMETER: ProcessSection.ProcessModel.StrategyToUse
   ;; DESCRIPTION: There are currently two process model strategies that are
   ;; supported by the RTI; (1) polling process model and (2) asynchronous I/O
   ;; process model.  The polling process model uses a single thread of
   ;; execution shared between the RTI and the federate.  Only when the federate
   ;; calls tick is the RTI able to perform work.  This strategy can starve the
   ;; RTI if tick is not called appropriately.  The asynchronous I/O process
   ;; model uses an internal thread within the RTI to avoid starvation.  This
   ;; thread will periodically wake up and determine if it can perform any
   ;; internal RTI work.  In the asynchronous I/O strategy the federate only
   ;; needs to invoke tick when it is prepared to handle callbacks.
   ;; RANGE: An enumeration value {Polling, AsynchronousIO}.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: AsynchronousIO

   ;;;;   (StrategyToUse AsynchronousIO)
   ;;;;   (StrategyToUse Polling)


   );; End of ProcessSection.ProcessModel

  (Scheduler
   ;; The Scheduler section contains parameters associated with the behavior of
   ;; the tick service.


   ;; PARAMETER: ProcessSection.Scheduler.SingleCallbackPerTick
   ;; DESCRIPTION: When using the tick service without the minimum and maximum
   ;; time arguments the RTI can be directed to return a single callback or
   ;; provide all available callbacks.  Using this service with a setting of No
   ;; indicates to the RTI that all available callbacks should be delivered to
   ;; the federate in a single tick() call.
   ;; RANGE: An enumeration value {Yes, No}.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: No.
   ;;
   ;;;;   (SingleCallbackPerTick     No)

   );; End of ProcessSection.Scheduler


  (InterceptSection
   ;; This section contains parameters which control the creation and
   ;; activation of pre-defined ambassador intercepts for the RTI Ambassador
   ;; and the Federate Ambassador.  Note that a given intercept will
   ;; intercept calls for both ambassadors.  Also, the order that the
   ;; intercepts are called will not necessarily match the order which they
   ;; appear in this section.  The intercepts may be controlled also 
   ;; using the rtiConsole.

   (AmbassadorIntercepts
    ;; This section lists the intercepts for all ambassadors in this process, regardless
    ;; of which federation or federate they are used with.  Note, only one intercept for
    ;; each type may be specified in this section.  A single intercept type cannot be 
    ;; specified as both active and inactive.
 
    (Active
     ;; This section provides the list of intercepts that should be created and activated
     ;; for the ambassador.  These intercepts will immediately begin intercepting all calls
     ;; through the ambassadors.

     ;; PARAMETER: ProcessSection.InterceptSection.AmbassadorIntercepts.Active.<InterceptType>
     ;; DESCRIPTION: The type of intercept to activate on the ambassadors.  Any number of these 
     ;;              parameters may be specified, but only one for each intercept type.  The
     ;;              intercept types must also be pre-defined.
     ;; RANGE: Available intercepts are FedProcessingLogger, Logging, Performance, and 
     ;;        TickLogger
     ;; CONSISTENCY: This parameter is not checked for consistency.
     ;; DEFAULT VALUE: NONE
     ;;
     ;;;;      (<Intercept Type> )
     ;;(Logging)

    ) ;; End of ProcessSection.InterceptSection.AmbassadorIntercepts.Active

    (Inactive
     ;; This section provides the list of intercepts that should be created, but not activated
     ;; for the ambassadors.  These intercepts will NOT intercept any calls
     ;; through the ambassadors until they are activated.

     ;; PARAMETER: ProcessSection.InterceptSection.AmbassadorIntercepts.Inactive.<InterceptType>
     ;; DESCRIPTION: The type of intercept to create for the ambassadors, but not activate.  Any 
     ;;              number of these parameters may be specified, but only one for each intercept 
     ;;              type.  The intercept types must also be pre-defined.
     ;; RANGE: Available intercepts are FedProcessingLogger, Logging, Performance, and 
     ;;        TickLogger
     ;; CONSISTENCY: This parameter is not checked for consistency.
     ;; DEFAULT VALUE: NONE
     ;;
     ;;;;      (<Intercept Type )

    ) ;; End of ProcessSection.InterceptSection.AmbassadorIntercepts.Inactive

   ) ;; End of ProcessSection.InterceptSection.AmbassadorIntercepts


    (LoggingInterceptOptions
    ;; The logging intercept options control the behavior of the predefined "Logging" 
    ;; intercept.

     ;; PARAMETER: ProcessSection.InterceptSection.LoggingInterceptOptions.OutFilenameBase
     ;; DESCRIPTION: This option specifies the basename of the file to send the "Logging"
     ;;              intercept output.  The string "_<pid>_<instance>.log" will be appended 
     ;;              to the basename, where <pid> is the process ID and <instance> is a positive
     ;;              integer denoting the instance of the intercept.  For example, if the 
     ;;              "Logging" intercept is activated for the second time in a process XXXX, and
     ;;              the basename is "logging", the filename will be logging_XXXX_2.log for
     ;;              that intercept instance.  Specifying an empty string will cause the output
     ;;              to be sent to stdout.
     ;; RANGE: The empty string or any string that forms the beginning of a valid filename
     ;; CONSISTENCY: This parameter is not checked for consistency.
     ;; DEFAULT VALUE: ""
     ;;
     ;;(OutputFilenameBase  rtiCallLog)

     (RtiAmbassador
      ;; This section contains options to control behavior of the "Logging" 
      ;; intercept for RTI::RTIambassador methods.

      ;; PARAMETER:  ProcessSection.InterceptSection.LoggingInterceptOptions.
      ;;             RtiAmbassador.LogMethods
      ;; DESCRIPTION: Specifies whether or not to log any methods in 
      ;;              RTI::RTIambassador.  If "NO" is specified,
      ;;              no methods are logged, regardless of the keyword list.
      ;; RANGE: An enumeration value {YES, NO}.
      ;; CONSISTENCY: This parameter is not checked for consistency.
      ;; DEFAULT VALUE: YES
      ;;
      ;;;;    (LogMethods  YES)

      ;; PARAMETER:  ProcessSection.InterceptSection.LoggingInterceptOptions.
      ;;             RtiAmbassador.LogAllExceptions
      ;; DESCRIPTION:  Specifies whether or not to log exceptions thrown during 
      ;;               a method on RTI::RTIambassador. This setting overrides 
      ;;               the keyword list and LogMethods setting.
      ;; RANGE: An enumeration value {YES, NO}.
      ;; CONSISTENCY: This parameter is not checked for consistency.
      ;; DEFAULT VALUE: NO
      ;;
      ;;;;    (LogAllExceptions  NO)
      
      ;; PARAMETER:  ProcessSection.InterceptSection.LoggingInterceptOptions.
      ;;             RtiAmbassador.LogTick
      ;; DESCRIPTION:  Specifies whether or not to log calls to tick.
      ;; RANGE: An enumeration value {YES, NO}.
      ;; CONSISTENCY: This parameter is not checked for consistency.
      ;; DEFAULT VALUE: YES
      ;;
      ;;;;    (LogTick  YES)
      
      (MethodKeywords
       ;; This section contains a list of keywords to check when logging 
       ;; methods.  If a method name contains any of the keywords, it will be 
       ;; logged, assuming LogMethods is set to YES.  Otherwise the methods 
       ;; will not be logged.  The keyword match is case sensitive.  If no 
       ;; keywords are specified, all methods are logged.
       
       ;; PARAMETER:  ProcessSection.InterceptSection.LoggingInterceptOptions.
       ;;             RtiAmbassador.MethodKeywords.<keyword>
       ;; DESCRIPTION: Log any method containing the given <keyword>.  
       ;;              Match is case sensitive. For multiple keywords, each
       ;;              should be specified on it's own line enclosed within
       ;;              parentheses.
       ;; CONSISTENCY: This parameter is not checked for consistency.
       ;; DEFAULT VALUE: NONE
       ;;
       ;;;;    (<keyword>)

       ) ;; End of ProcessSection.InterceptSection.LoggingInterceptOptions.RtiAmbassador.MethodKeywords
      )  ;; End of ProcessSection.InterceptSection.LoggingInterceptOptions.RtiAmbassador

     (FederateAmbassador
      ;; This section contains options to control behavior of the "Logging" 
      ;; intercept for RTI::FederateAmbassador methods.

      ;; PARAMETER:  ProcessSection.InterceptSection.LoggingInterceptOptions.
      ;;             FederateAmbassador.LogMethods
      ;; DESCRIPTION: Specifies whether or not to log any methods in 
      ;;              RTI::FederateAmbassador.  If "NO" is specified,
      ;;              no methods are logged, regardless of the keyword list.
      ;; RANGE: An enumeration value {YES, NO}.
      ;; CONSISTENCY: This parameter is not checked for consistency.
      ;; DEFAULT VALUE: YES
      ;;
      ;;;;    (LogMethods  YES)

      ;; PARAMETER:  ProcessSection.InterceptSection.LoggingInterceptOptions.
      ;;             FederateAmbassador.LogAllExceptions
      ;; DESCRIPTION:  Specifies whether or not to log exceptions thrown 
      ;;               during a method on RTI::FederateAmbassador.
      ;;               This setting overrides the keyword list and LogMethods 
      ;;               setting.
      ;; CONSISTENCY: This parameter is not checked for consistency.
      ;; DEFAULT VALUE: NO
      ;;
      ;;;;    (LogAllExceptions  NO)
      
      (MethodKeywords
       ;; This section contains a list of keywords to check when logging 
       ;; methods.  If a method name contains any of the keywords, it will be 
       ;; logged, assuming LogMethods is set to YES.  Otherwise the methods 
       ;; will not be logged.  The keyword match is case sensitive.  If no 
       ;; keywords are specified, all methods are logged.
       
       ;; PARAMETER:  ProcessSection.InterceptSection.LoggingInterceptOptions.
       ;;             FederateAmbassador.MethodKeywords.<keyword>
       ;; DESCRIPTION: Log any method containing the given <keyword>.  Match 
       ;;              is case sensitive. For multiple keywords, each
       ;;              should be specified on it's own line enclosed within
       ;;              parentheses.
       ;; CONSISTENCY: This parameter is not checked for consistency.
       ;; DEFAULT VALUE: NONE
       ;;
       ;;;;    (<keyword>)

       ) ;; End of ProcessSection.InterceptSection.LogginInterceptOptions.FederateAmbassador.MethodKeywords
      )  ;; End of ProcessSection.InterceptSection.LogginInterceptOptions.FederateAmbassador
     )  ;; End ProcessSection.InterceptSection.LoggingInterceptOptions

   ) ;; End ProcessSection.InterceptSection

  );; End of ProcessSection

 (FederationSection
  ;; Entries in this section apply to the federation level components.

  (FederationExecutive
   ;; The FederationExecutive section contains parameters related to the
   ;; federation executive process that is launched when a federation is
   ;; created.

   ;; PARAMETER: FederationSection.FederationExecutive.FederationExecutiveEndpoint
   ;; DESCRIPTION: The Federation Executive endpoint defines the network address
   ;; and port number used by the Federation Executive process.  The network
   ;; address can be a hostname or an IP address.  Typically, the endpoint only
   ;; needs to be defined when the Federation Executive needs to use the
   ;; non-default network interface, or when the Federation Executive (i.e.,    
   ;; fedex) is to run on a different host than the RTI Executive.
   ;; RANGE: A valid hostname or IP address followed by a colon and then the
   ;; port number.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: Will use same default hostname on the host where the RTI
   ;; Executive is running, with a system generated port number.
   ;;
   ;;;;  (FederationExecutiveEndpoint hostname:port)   

   ;; PARAMETER: FederationSection.FederationExecutive.FilenameOfFederationExecutiveExecutable
   ;; DESCRIPTION: This parameter defines the relative or absolute path to the
   ;; Federation Executive executable (i.e., fedex).  The relative path is
   ;; defined relative to the location of the RTI Executive.
   ;; RANGE: A valid path to the fedex executable.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: fedex
   ;;
   ;;;;   (FilenameOfFederationExecutiveExecutable fedex)

   ;; PARAMETER: FederationSection.FederationExecutive.TimeToWaitBeforeCommunicatingWithFederationExecutiveInSeconds
   ;; DESCRIPTION: This parameter is used to allow the federate application to
   ;; wait a period of time before trying to connect to the Federation Executive
   ;; process.  A small delay may be necessary when the Federation Executive is
   ;; being created.
   ;; RANGE: An integer greater than or equal to zero.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: 3
   ;;
   ;;;;   (TimeToWaitBeforeCommunicatingWithFederationExecutiveInSeconds 3)

   ;; PARAMETER: FederationSection.FederationExecutive.NumberOfAttemptsToFindFederationExecutive
   ;; DESCRIPTION: The federate application may attempt to connect to the
   ;; Federation Executive process multiple times.
   ;; RANGE: An integer number greater than zero.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: 10
   ;;
   ;;;;   (NumberOfAttemptsToFindFederationExecutive  10)

   ;; PARAMETER: FederationSection.FederationExecutive.TimeToWaitAfterEachAttemptInSeconds
   ;; DESCRIPTION: When the federate application fails to initially connect to
   ;; the Federation Executive process it can wait a fixed period of time.
   ;; RANGE: A floating point number greater than or equal to zero.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: 2.0
   ;;
   ;;;;   (TimeToWaitAfterEachAttemptInSeconds  2.0)

   ;; PARAMETER: FederationSection.FederationExecutive.FilenameToRedirectStdout
   ;; DESCRIPTION: This parameter can be used to direct standard output to a
   ;; file, rather than the default output device.
   ;; RANGE: A valid filename.
   ;; CONSISTENCY: This parameter is checked for consistency across the federation.
   ;; DEFAULT VALUE: None, will use the standard output device.
   ;;
   ;;;;  (FilenameToRedirectStdout fedex.stdout)

   ;; PARAMETER: FederationSection.FederationExecutive.FilenameToRedirectStderr
   ;; DESCRIPTION: This parameter can be used to direct standard error to a
   ;; file, rather than the default error device.
   ;; RANGE: A valid filename.
   ;; CONSISTENCY: This parameter is checked for consistency across the federation.
   ;; DEFAULT VALUE: None, will use the standard error device.
   ;;
   ;;;;  (FilenameToRedirectStderr fedex.stderr)

   ;; PARAMETER: FederationSection.FederationExecutive.SaveAndRestoreLocally
   ;; DESCRIPTION: This parameter indicates whether the saved file are to be
   ;; created locally.  
   ;; RANGE: An enumeration value {Yes, No}.
   ;; CONSISTENCY: This parameter is checked for consistency across the federation
   ;; DEFAULT_VALUE: No
   ;;
   ;;;;  (SaveAndRestoreLocally No)

   ;; PARAMETER: FederationSection.FederationExecutive.DirectoryForSaveAndRestoreFiles
   ;; DESCRIPTION: This parameter provides the pathname to the directory used
   ;; when producing new saved files or processing existing saved files.
   ;; RANGE: A valid directory pathname.
   ;; CONSISTENCY: This parameter is checked for consistency across the federation.
   ;; DEFAULT_VALUE: .
   ;;
   ;;;;  (DirectoryForSaveAndRestoreFiles .)

   ;; PARAMETER: FederationSection.FederationExecutive.WindowsDirectoryForLocalSaveAndRestoreFiles
   ;; DESCRIPTION: This parameter provides the pathname to the local (same host)  
   ;; directory used when producing new saved files or processing existing 
   ;; saved file.  This parameter is used if and only if the  parameter
   ;; SaveAndRestoreLocally is set to "Yes" and the federate application
   ;; is running on a Windows platform.
   ;; RANGE: A valid directory pathname.
   ;; CONSISTENCY: This parameter is NOT checked for consistency across the federation.
   ;; DEFAULT_VALUE: .
   ;;
   ;;;;  (WindowsDirectoryForLocalSaveAndRestoreFiles .)
 
   ;; PARAMETER: FederationSection.FederationExecutive.UnixDirectoryForLocalSaveAndRestoreFiles
   ;; DESCRIPTION: This parameter provides the pathname to the local (same host)
   ;; directory used when producing new saved files or processing existing 
   ;; saved file.  This parameter is used if and only if the  parameter
   ;; SaveAndRestoreLocally is set to "Yes" and the federate application
   ;; is running on a Unix platform.
   ;; RANGE: A valid directory pathname.
   ;; CONSISTENCY: This parameter is checked for consistency across the federation.
   ;; DEFAULT_VALUE: .
   ;;
   ;;;;  (UnixDirectoryForLocalSaveAndRestoreFiles .)


   ;; PARAMETER: FederationSection.FederationExecutive.IgnoreRidInconsistenciesOnRestore
   ;; DESCRIPTION: This parameter specifies whether the federation should 
   ;; allow a restore to proceed if the RID file used during the save is
   ;; different then the RID file used prior to the call to restore. 
   ;; RANGE: Yes, No
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation
   ;; DEFAULT_VALUE: No
   ;;
   ;;;;  (IgnoreRidInconsistenciesOnRestore No)

   ;; PARAMETER: FederationSection.FederationExecutive.TimeoutForSerializationLockInSeconds
   ;; DESCRIPTION: Specifies how long to wait before timing out the serialization lock after
   ;; the last time the requester renewed it.  The lock is used for serializing join, resign,
   ;; destroy, save and restore across the federation.  A value of 0.0 or Off disables the 
   ;; timeout.  Use Off warily, as it can cause the federation to not allow any processes
   ;; to perform any of these actions if a process with the lock fails to release it.
   ;; RANGE: A floating point >= 0.0.  
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation
   ;; DEFAULT_VALUE: 30.0
   ;;
   ;;;;  (TimeoutForSerializationLockInSeconds 30.0)

  );; End of FederationSection.FederationExecutive

   ;; PARAMETER: FederationSection.ConnectionlessFederateID
   ;; DESCRIPTION: Specifies the federate handle for the federate to use when joining
   ;; a federation in connectionless mode.  Two handles are needed because each federate
   ;; has a shadow MOM federate.  The environment variable RTI_CONNECTIONLESS_FEDERATE_ID
   ;; will override this RID parameter if it is set in the shell where the federate
   ;; executable is started.  The format for the environment variable is the same,
   ;; "federate ID,MOM federate ID" for example:
   ;; >setenv RTI_CONNECTIONLESS_FEDERATE_ID 3200,3201
   ;; RANGE: Two integer values within the limits of the NumberOfBitsForFederateHandles
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation
   ;; DEFAULT_VALUE: N/A (will be random)
   ;;(ConnectionlessFederateID 3200,3201)

   (ERF
   	 (FederateSection
      	(JCATS
		;; Set this via bridge.jlvc.federateName variable in JCATSRC file (added in 7.1.5 bridge)
	   		(ConnectionlessFederateID 1,101)
      	)
      	(JDLM
	   		(ConnectionlessFederateID 2,102)
      	)
      	(HDC
	   		(ConnectionlessFederateID 3,103)
      	)
      	(SIMPLE
	   		(ConnectionlessFederateID 4,104)
      	)
      	(TACSIM
	   		(ConnectionlessFederateID 5,105)
      	)
      	(FMT-R
	   		(ConnectionlessFederateID 6,106)
      	)
      	(ISM_HLA
	  	 	(ConnectionlessFederateID 7,107)
      	)
      	(HLAnalyzer
	  	 	(ConnectionlessFederateID 8,108)
     		)
      	(VisionXXI
	   		(ConnectionlessFederateID 9,109)
      	)
      	(JNEM
	   		(ConnectionlessFederateID 10,110)
      	)
      	(AARS
	   		(ConnectionlessFederateID 11,111)
      	)
      	(SITH
	   		(ConnectionlessFederateID 12,112)
      	)
      	(ETSIU
	   		(ConnectionlessFederateID 13,113)
      	)
	(VisionXXII	
			(ConnectionlessFederateID 14,114)
	)
	(VisionXXIII
			(ConnectionlessFederateID 15,115)
	)
	(VisionXXIV
			(ConnectionlessFederateID 16,116)
	)
	(AARS_HLA	
			(ConnectionlessFederateID 17,117)
	)
	(SIMPLE2	
			(ConnectionlessFederateID 18,118)
	)
	(HLAnalyzer2	
			(ConnectionlessFederateID 19,119)
	)
	(HLAnalyzer3	
			(ConnectionlessFederateID 20,120)
	)
	(HLAnalyzer4	
			(ConnectionlessFederateID 21,121)
	)
	(IEWTPT	
			(ConnectionlessFederateID 22,122)
	)
	(FIRESIM	
			(ConnectionlessFederateID 23,123)
	)
	(EADSIM	
			(ConnectionlessFederateID 24,124)
	)
	(JSPA	
			(ConnectionlessFederateID 25,125)
	)
	 );; end FederateSection
   );; end ERF

  (FederationInterconnect
   ;; The FederationInterconnect section contains parameters associated with the
   ;; configuration of reliable transport configuration channels.

   ;; PARAMETER: FederationSection.FederationInterconnect.StrategyToUse
   ;; DESCRIPTION: The interconnection of RTI nodes for reliable traffic can use
   ;; a CollocatedEventChannelS, a CentralizedEventChannel, or a 
   ;; HierarchicalEventChannels strategy.  The CollocatedEventChannel strategy 
   ;; allows each RTI node (i.e., each federate application) to contain a "TCP 
   ;; exploder" that is connected to every other node.  The 
   ;; CentralizedEventChannel strategy uses a single node to receive all of the 
   ;; federation reliable traffic and transmit this data to the interested
   ;; receivers.  The HierarchicalEventChannels strategy connects federates
   ;; through a network of distribution nodes.  The CollocatedEventChannel adds 
   ;; some processing requirements to each node to perform the TCP writes, but 
   ;; it avoids latency when going through a centralized node which has the 
   ;; processing burden of the entire federation.
   ;;
   ;; For HierarchicalEventChannels, each federate is responsible only for
   ;; exploding messages to other federation nodes (federate or distributor processes)
   ;; within its federation segment (Set of federate and distributor nodes with the
   ;; same parent distributor node).  The parent node sends the message to other
   ;; federation segments as needed.  This strategy can be used to eliminate
   ;; redundant messages over WAN links and help alleviate the load of exploding
   ;; reliable data from the local federate.  It also does not have a centralized
   ;; bottleneck for the federation.  However, latency may increase with additional
   ;; hops a message must make between federates.  

   ;; RANGE: An enumeration value {CollocatedEventChannels,
   ;; CentralizedEventChannel, HierarchicalEventChannels}
   ;; CONSISTENCY: This parameter is checked for consistency across the federation.
   ;; DEFAULT VALUE: CollocatedEventChannels
   ;;
   ;;;;   (StrategyToUse CollocatedEventChannels)

   ;; PARAMETER: FederationSection.FederationInterconnect.PingIntervalInSeconds
   ;; DESCRIPTION: Controls the rate at which the interconnect sends ping
   ;; requests to each node.  This is used to determine the "wellness" of the
   ;; nodes.
   ;; RANGE: A real number greater than 1.0 or Off
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: 5.0
   ;; Values 
   ;;
   ;;;;   (PingIntervalInSeconds 5.0)

   (HierarchicalEventChannelsOptions
   ;; This section contains configuration options for the
   ;; HierarchicalEventChannels strategy.  This section is used only when
   ;; HierarchicalEventChannels strategy is specified.

   ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
   ;;              FilenameOfInterconnectManagerExecutable
   ;; DESCRIPTION: This parameter defines the relative or absolute path to the
   ;; Interconnect Manager executable (i.e., interconnectManager).  The relative
   ;; path is defined relative to the location of the RTI Executive.  This can
   ;; be useful if one wishes to use the windows debug build for this process
   ;; (interconnectManagerd)
   ;; RANGE: A valid path to the Interconnect Manager executable.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT VALUE: interconnectManager
   ;;
   ;;;; (FilenameOfInterconnectManagerExecutable interconnectManager)

    ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
    ;;              Topology 

    ;; DESCRIPTION: This parameter is used to specify the connection topology
    ;; for the federation when using the HierarchicalEventChannels interconnect
    ;; strategy.  The section contains an entry for each distributor in the
    ;; federation.  The entry specifies configuration options for that
    ;; distributor, including what parent node it belongs to (use "null" if it
    ;; has no parent and goes at the root level) and what federate node hosts
    ;; will be a child of the given distributor.  In this manner the topology of
    ;; the entire federation is laid out.  When a federate node joins it will be
    ;; a child of the first distributor node which is the "closest match" for
    ;; its host IP address (i.e. child entry matches the highest number of
    ;; bits). If no match is found, the federate node will join at the top
    ;; (root) level.  It is up to the user to determine a layout for the
    ;; connection topology.  If the federation spans one or more WAN links, it is
    ;; recommended to at least provide a distributor on each LAN for all
    ;; federates on that LAN to eliminate unnecessary redundant messages across
    ;; the WAN links.
    (Topology
     
    ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
    ;;              Topology.<NodeName> 
    ;; DESCRIPTION: This parameter contains the configuration information for a
    ;; given distributor node.  The user may specify as many distributor nodes
    ;; as necessary for the federation.  
    ;;;; (<NodeName>

     ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
     ;;              Topology.<NodeName>.ParentNode
     ;; DESCRIPTION: Specifies the <NodeName> of the parent distributor for this distributor.
     ;; RANGE: A valid name of another distributor node in this section or "null".
     ;; DEFAULT VALUE: None; Must be specified.
     ;;
     ;;;;   (ParentNode <name>)

     ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
     ;;              Topology.<NodeName>.Host
     ;; DESCRIPTION: Specifies the host for the distributor node.  This host must
     ;; have either the rtiexec process or a launch process running.
     ;; RANGE: An IP address or resolvable hostname. 
     ;; DEFAULT VALUE: None; Must be specified.
     ;;
     ;;;;   (Host <host or IP>)

     ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
     ;;              Topology.<NodeName>.FilenameOfExecutable
     ;; DESCRIPTION: Specifies filename of the distributor executable
     ;; RANGE: A valid executable name
     ;; DEFAULT VALUE: distributor
     ;;
     ;;;;   (FilenameOfExecutable distributor)

     ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
     ;;              Topology.<NodeName>.CommandLineArguments
     ;; DESCRIPTION: Specifies the command line arguments for the distributor
     ;; node.  Currently the only available command line argument is 
     ;; "-threads <int>" to specify the number of threads the distributor process
     ;; runs in.  Note this will always be an odd number, and even numbers will be
     ;; incremented to the next odd number.  The default number is 3.
     ;;
     ;;;;   (CommandLineArguments
     ;;;;     (arg0 -threads)
     ;;;;     (arg1 3)
     ;;;;   ) ;; End of CommandLineArguments


     ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
     ;;              Topology.<NodeName>.Children
     ;; DESCRIPTION: Specifies the list of children federate nodes (using host IP
     ;; address) for this distributor.  May have multiple child entries.
     ;; DEFAULT VALUE: None
     ;;
     ;;;; (Children 

      ;; PARAMETER: FederationSection.FederationInterconnect.HierarchicalEventChannelsOptions.
      ;;              Topology.<NodeName>.Children.<ChildN>
      ;; DESCRIPTION: Specifies a single entry for children of this distributor
      ;; node.  The value uses CIDR (Classless Inter Domain Routing) notation to
      ;; specify the host IP address or range.  The number after the slash '/'
      ;; specifies the number of significant bits for this entry.  Mateches to
      ;; the entry will be determined as the one with the most significant bits
      ;; matching the federate node's host IP address.  A value of 0.0.0.0/0 can
      ;; be used to specify a default node.
      ;; RANGE: A host IP address range using CIDR notation.
      ;; DEFAULT VALUE: None
      ;;
      ;;;;      (<ChildN>  192.168.1.0/24)

      ;;;; )  ;; End of <NodeName>.Children
     ;;;; ) ;; End of <NodeName>
     ) ;; End of FederationInterconnect.HierarchicalEventChannelsOptions.Topology 
    ) ;; End of FederationInterconnect.HierarchicalEventChannelsOptions

  ) ;; End of FederationSection.FederationInterconnect

  (Networking
   ;; This section contains parameters related to networking information related
   ;; to the federation components.

   ;; PARAMETER: FederationSection.Networking.FilterDuplicateUpdates
   ;; DESCRIPTION: This parameter determines the number of multicast packets 
   ;; that are "remembered" by the RTI in order to guarantee that best
   ;; effort updates and interactions are only received once by any federate.
   ;; Larger values use more memory but reduce the chance that duplicate 
   ;; messages are received.  A value of "Off" may be specified to disable
   ;; update filtering ONLY if RestrictPublicationRegions is set to "Yes".
   ;; RANGE: A positive integer value or the enumeration value {Off}.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT_VALUE: 65535
   ;;
   (FilterDuplicateUpdates Off)

   (BundlingOptions
    ;; Federation data can be bundled by the sender in order to improve
    ;; throughput, at the expense of latency.

    (UDP
     ;; RTI best effort transport uses User Datagram Protocol (UDP).

     ;; PARAMETER: FederationSection.Networking.BundlingOptions.UDP.MaxTimeBeforeSendInSeconds
     ;; DESCRIPTION: This parameter is the maximum amount of time that the RTI
     ;; will wait before the RTI flushes the data.  If set to 0, bundling will
     ;; be disabled.
     ;; RANGE: A floating point value greater than or equal to zero.
     ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
     ;; DEFAULT VALUE: 0.005
     ;;
     ;;;;     (MaxTimeBeforeSendInSeconds 0.005)
     (MaxTimeBeforeSendInSeconds 0.01)

     ;; PARAMETER: FederationSection.Networking.BundlingOptions.UDP.MaxBytesBeforeSend
     ;; DESCRIPTION: This parameter is the maximum number of bytes that will be
     ;; bundled before the RTI flushes the data.
     ;; RANGE: An integer value greater than or equal to zero.
     ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
     ;; DEFAULT VALUE: 63000
     ;;
     ;;;;     (MaxBytesBeforeSend    63000)
     (MaxBytesBeforeSend    900)

     );; End of FederationSection.Networking.BundlingOptions.UDP

    (TCP
     ;; RTI Reliable transport uses Transfer Control Protocol (TCP).

     ;; PARAMETER: FederationSection.Networking.BundlingOptions.TCP.MaxTimeBeforeSendInSeconds
     ;; DESCRIPTION: This parameter is the maximum amount of time that the RTI
     ;; will wait before the RTI flushes the data.  If set to 0, bundling will
     ;; be disabled.
     ;; RANGE: A floating point value greater than or equal to zero.
     ;; DEFAULT VALUE: 0.005
     ;;
     ;;;;     (MaxTimeBeforeSendInSeconds 0.005)

     ;; PARAMETER: FederationSection.Networking.BundlingOptions.TCP.MaxBytesBeforeSend
     ;; DESCRIPTION: This parameter is the maximum number of bytes that will be
     ;; bundled before the RTI flushes the data.
     ;; RANGE: An integer value greater than or equal to zero.
     ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
     ;; DEFAULT VALUE: 63000
     ;;
     ;;;;     (MaxBytesBeforeSend    63000)

     );; End of FederationSection.Networking.BundlingOptions.TCP

    );; End of FederationSection.Networking.BundlingOptions

   (MulticastOptions
    ;; The networking multicast options define the parameters that control the
    ;; behavior of UDP communication within the RTI that is used for Best Effort
    ;; transport.

    ;; PARAMETER: FederationSection.Networking.MulticastOptions.PortNumber
    ;; DESCRIPTION: The port number of the socket used for sending multicast
    ;; traffic in support of Best Effort transport.
    ;; RANGE: An integer value representing a valid port number, or
    ;; the string RTI-selected to have the RTI select an available port
    ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
    ;; DEFAULT VALUE: RTI-selected
    ;;
    ;;;;    (PortNumber 2000)

    ;; PARAMETER: FederationSection.Networking.MulticastOptions.BaseAddress
    ;; DESCRIPTION: The base network address (IP four decimal address or
    ;; hostname) for sending multicast traffic.  The Best Effort traffic will be
    ;; segmented into different multicast addresses when using the Data
    ;; Distribution Management (DDM) services.  The maximum number of multicast
    ;; addresses used by the RTI will be defined by the available addresses
    ;; between the MaxAddress and the BaseAddress, although the actual number
    ;; used may be far less (see DDM parameters).
    ;; RANGE: Any valid IP multicast address, e.g., from 224.0.0.3 to 
    ;; 239.255.255.255
    ;; CONSISTENCY: This parameter is checked for consistency across the federation.
    ;; DEFAULT VALUE: 224.1.0.0
    ;;
    (BaseAddress 224.50.0.0)

    ;; PARAMETER: FederationSection.Networking.MulticastOptions.MaxAddress
    ;; DESCRIPTION: The maximum network address (IP four decimal address or
    ;; hostname) for sending multicast traffic.  The Best Effort traffic will be
    ;; segmented into different multicast addresses when using the Distribution
    ;; Management (DDM) services.  The maximum number of multicast addresses
    ;; used by the RTI will be defined by the available addresses between the
    ;; MaxAddress and the BaseAddress, although the actual number used may be
    ;; far less (see DDM parameters).
    ;; RANGE: Any valid IP multicast address greater than or equal to the base
    ;; address.
    ;; CONSISTENCY: This parameter is checked for consistency across the federation.
    ;; DEFAULT VALUE: 239.255.255.255
    ;;
    ;;;;    (MaxAddress 239.255.255.255)

    ;; PARAMETER: FederationSection.Networking.MulticastOptions.TimeToLive
    ;; DESCRIPTION: To prevent infinite routing loops, UDP multicast packets are
    ;; marked with a counter that is decremented each time a router sees the
    ;; packet.  This counter is called TTL (Time To Live).  Routers will not
    ;; pass any packets with a TTL less than 2.  Consequently, to pass UDP
    ;; multicast between LAN's, not only must the routers be properly 
    ;; configured, but the TTL must be at least 2 as well.
    ;; RANGE: An integer from 0 to 255
    ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
    ;; DEFAULT VALUE: 1
    ;;
    (TimeToLive 16)

    ;; PARAMETER: FederationSection.Networking.MulticastOptions.SocketSendBufferSize
    ;; DESCRIPTION: Size, in bytes, to be allocated for the UDPMulticast socket send 
    ;; buffer.  This option is necessary since the ORB parameter -ORBSndSock option does 
    ;; not effect sockets used for multicast traffic.  Currently that option only works 
    ;; for sockets used for TCP traffic.  Hopefully this will be fixed in future 
    ;; releases.
    ;; RANGE:  1K - 8MB (or OS dependent)
    ;; CONSISTENCY: None
    ;; DEFAULT VALUE: 131072 (128k)
    ;;
    (SocketSendBufferSize 8388608) 

    ;; PARAMETER: FederationSection.Networking.MulticastOptions.SocketReceiveBufferSize
    ;; DESCRIPTION: Size, in bytes, to be allocated for the UDPMulticast socket receive.  
    ;; buffer.  This option is necessary since the ORB parameter -ORBRcvSock option does 
    ;; not effect sockets used for multicast traffic.  Currently that option only works 
    ;; for sockets used for TCP traffic.  Hopefully this will be fixed in future 
    ;; releases.
    ;; RANGE:  1K - 8MB (or OS dependent)
    ;; CONSISTENCY: None
    ;; DEFAULT VALUE: 131072 (128k)
    ;;
    (SocketReceiveBufferSize 8388608) 

    );; End of FederationSection.Networking.MulticastOptions


   (Statistics
    ;; This section contains parameters which control the activation
    ;; of pre-defined virtual network statistics.  The statistics
    ;; classes may also be controlled (and data retrieved) using the
    ;; rtiConsole.  The statistics gathered depend upon the type of
    ;; statistic activated.  Multiple statistic types can be activated
    ;; simultaneously.  Currently, there are 3 types of statistics
    ;; available: PerClass, PerFederate and PerChannel.  The PerClass
    ;; statistic gathers send and receive statistics for each Object
    ;; and Interaction Class within the FOM.  The PerFederate
    ;; statistic gathers send and receive statistics for each federate
    ;; communicated within the federation (by federate handle).  The
    ;; PerChannel statistic gathers send and receive statistics for
    ;; each channel created within the Virtual Network layer.  The
    ;; number of channels created is determined by the Data
    ;; Distribution Management strategy (See RID parameter
    ;; FederationSection.DataDistribution.StrategyToUse).  Each
    ;; statistic type can take 2 command line options: "-t <int>"
    ;; specifies the time period in seconds in which to print
    ;; statistics and "-f <string>" which specifies output to go to a
    ;; file with a name that starts with the given string.  The
    ;; statistic type, date and process ID will be appended to the
    ;; filename.

    ;; PARAMETER: Federation.Networking.Statistics.<StatisticType>
    ;; DESCRIPTION: Specifies whether or not to activate the given
    ;; statistic type and provides command line arguments for the
    ;; statistic instance.
    ;; RANGE: Enabled, Disabled
    ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
    ;; DEFAULT VALUE: Disabled
    ;;
    ;;;;  (<StatisticType> Enabled
    ;;;;     (arg0 "-t")
    ;;;;     (arg1 5)
    ;;;;     (arg2"-f")
    ;;;;     (arg3 "stat")
    ;;;;   )

   ) ;; End of FederationSecion.Networking.Statistics

   );; End of FederationSection.Networking

  (InternalSizes
     ;; This section contains parameters that controls some of the sizes of
     ;; the internal data structures.
     
     ;; PARAMETER: FederationSection.InternalSizes.
     ;;            NumberOfBitsForFederateHandles
     ;; DESCRIPTION: This parameter controls the number of bits to use
     ;; for federate handles.  RTI::ObjectHandle is a 32-bit data structure.
     ;; To guarantee global uniqueness, the ObjectHandle consists of 2 parts:
     ;; the federateHandle of the object instance's creator and a instance
     ;; counter.  By default, the fedreateHandle is 16-bits and the counter
     ;; is 16-bits.  This allows for each federate to CREATE a maximum of
     ;; 64K (2^16) objects and to DISCOVER a maximum of 4G (2^32) objects from
     ;; all federates.
     ;; However, in some cases, 64K object creations is not enough.  
     ;; Furthermore, the ability to have 64K federates may be excessive in
     ;; most cases.  This parameter tells the RTI the number of bits to use
     ;; for creating federate handles.  Smaller values limit the total number
     ;; of federates that may join a federation but at the same time increase
     ;; the maximum number of locally created objects.  For example, a value
     ;; of 8 would limit the number of federates in the federation to 256 but
     ;; would allow each federate to create 2^24 objects.  Please note that
     ;; MOM is a federate with a separate federate handle.  If MOM is enabled,
     ;; the the effective number of federates able to join a federation is
     ;; cut in half.
     ;; RANGE: An integer value in the range 1 to 31 inclusive
     ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
     ;; DEFAULT VALUE: 16
     ;;(NumberOfBitsForFederateHandles 16) 
     (NumberOfBitsForFederateHandles 14)
     
     ;; PARAMETER: FederationSection.InternalSizes.
     ;;            BehaviorWhenMaxObjectHandlesExceeded
     ;; DESCRIPTION: This parameter controls the behavior of the RTI when
     ;; the federate attempts to create more than
     ;; 2^(32-NumberOfBitsForFederateHandles) objects locally.  The
     ;; default value of Exception will raise an RtiInternal exception
     ;; if the user tries to call registerObjectInstance more times than
     ;; there are bits available.  If this parameter is set to TryToReuse,
     ;; then the RTI will attempt to reuse ObjectHandles that are not
     ;; locally known to the LRC.  If there are no available unused 
     ;; ObjectHandles, then the RTI will throw an RtiInternal exception.
     ;; NOTE: BEWARE USING TRYTOREUSE IF YOUR FEDERATE USES OWNERSHIP
     ;; MANAGEMENT.  With TryToReuse enabled, it is possible for a 
     ;; federate to create an object, transfer ownership of that object, 
     ;; unsubscribe to that object class, then create an instance of 
     ;; different object class with the same ObjectHandle as the transferred
     ;; object.  This could cause great problems.
     ;; RANGE: An enumeration value {Exception, TryToReuse}
     ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
     ;; DEFAULT VALUE: Exception
     ;;(BehaviorWhenMaxObjectHandlesExceeded Exception)
     (BehaviorWhenMaxObjectHandlesExceeded TryToReuse)
  ) ;;FederationSection.InternalSizes
  
  (Advisories
   ;; The advisories section contains parameters related to the RTI advisory
   ;; mechanisms.  The scope advisories that inform the federate when certain
   ;; attributes owned by other federates are in or out of scope with respect to
   ;; the federate's subscriptions.  The relevance advisories inform the
   ;; publishing federate whether other federates in the federation are
   ;; interested in particular object or interaction classes and particular
   ;; object attribute instances.

   ;; PARAMETER: FederationSection.Advisories.InteractionRelevanceAdvisories
   ;; DESCRIPTION: This parameter controls whether interaction relevance
   ;; advisories are computed and maintained within the LRC.  If this 
   ;; advisory is disabled, then TurnInteractionsOn/Off callbacks will not
   ;; be generated nor will any internal LRC messages be sent or computations
   ;; be done to maintain the interaction relevance advisory state.  When
   ;; enabled, the interaction relevance advisories will inform the federate if
   ;; there exists any other federate within the federation that is subscribed
   ;; to a particular interaction class.  The relevance advisories could be
   ;; beneficial in large scale federations, although there may be significant
   ;; performance cost in calculating these advisories.
   ;; RANGE: An enumeration value {Enabled, Disabled}
   ;; DEFAULT VALUE: Enabled
   ;;
   (InteractionRelevanceAdvisories Disabled

    ;; PARAMETER: FederationSection.Advisories.InteractionRelevanceAdvisories.
    ;;            AdvisorySwitchDefault
    ;; DESCRIPTION: This parameter controls the switch to define if the
    ;; interaction relevance advisory mechanism is enabled or disabled by
    ;; default when the federate begins.  This parameter only determines whether
    ;; a federate will receive TurnInteractionsOn/Off callbacks.
    ;; This parameter does NOT control whether the LRC maintains the proper
    ;; state to determine whether callbacks should be made, thus, this
    ;; parameter will not impact LRC performance.
    ;; RANGE: An enumeration value {Enabled, Disabled}
    ;; DEFAULT VALUE: Enabled
    ;;
    ;;(AdvisorySwitchDefault Enabled)

    ;; PARAMETER: FederationSection.Advisories.InteractionRelevanceAdvisories.
    ;;            TransportMechanism
    ;; DESCRIPTION: This parameter controls the network transportation
    ;; mechanism used to maintain interaction relevance advisory state.  TCP
    ;; will use a reliable TCP/IP connections to send internal LRC messages;
    ;; UDPmulticast will use UDP multicast to maintain state.  TCP messages
    ;; are reliable and relatively slow while UDP multicast messages may
    ;; be much faster but are unreliable.  WARNING:  if UDPmulticast is
    ;; selected, TurnInteractionsOn/Off callbacks could be
    ;; missed and the federate will NOT be notified of this.  Do NOT select
    ;; UDPmulticast if your federation relies on
    ;; TurnInteractionsOn/Off callbacks being generated reliably.
    ;; RANGE: An enumeration value {TCP, UDPmulticast}
    ;; DEFAULT VALUE: TCP
    ;;
    ;;(TransportMechanism TCP)

    ;; PARAMETER: FederationSection.Advisories.InteractionRelevanceAdvisories.
    ;;            HeartbeatInSeconds
    ;; DESCRIPTION: The relevance advisory interaction class heartbeat parameter
    ;; controls how often each federate will broadcast interaction subscription
    ;; information to the other RTI nodes in order to calculate if there is a
    ;; federate that has an interest in a particular interaction class.  The
    ;; heartbeat mechanism is used as a more scalable approach than requiring
    ;; each federate to buffer global subscription knowledge for the entire
    ;; federation.  If the parameter InteractionRelevanceAdvisories
    ;; is disabled, this parameter is ignored.  If the interaction 
    ;; relevance advisories are being used the heartbeat rate should be the
    ;; maximum delay in receiving the interaction advisory that is tolerable.
    ;; RANGE: A floating point value greater than zero
    ;; DEFAULT VALUE: 10.0
    ;;
    ;;(HeartbeatInSeconds 10.0)

    ;; PARAMETER: FederationSection.Advisories.InteractionRelevanceAdvisories.
    ;;            TimeoutInSeconds
    ;; DESCRIPTION: The relevance advisory interaction timeout parameter defines
    ;; how long a federate will wait to receive a relevance interaction
    ;; subscription heartbeat that matches a particular interaction class.
    ;; A match is necessary to inform the federate that there is
    ;; interest.  The heartbeat mechanism is used as a more scalable approach
    ;; than requiring each federate to buffer global subscription knowledge for
    ;; the entire federation.  If the parameter InteractionRelevanceAdvisories
    ;; is disabled, this parameter is ignored.
    ;; If the relevance advisories are being used the timeout rate should be
    ;; at least twice that of the heartbeat rate.
    ;; RANGE: A floating point value greater than zero
    ;; DEFAULT VALUE: 30.0
    ;;
    ;;(TimeoutInSeconds 30.0)
   )



   ;; PARAMETER: FederationSection.Advisories.ClassRelevanceAdvisories
   ;; DESCRIPTION: This parameter controls whether object Class relevance 
   ;; advisories are computed and maintained within the LRC.  If this advisory
   ;; is disabled, then Start/StopRegistrationForObjectClass callbacks will
   ;; not be generated nor will any internal LRC messages be sent or
   ;; computations be done to maintain the object class relevance advisory
   ;; state.  When enabled, the class relevance advisories will inform the
   ;; federate if there exists any other federate within the federation that is
   ;; subscribed to a particular class.  The relevance advisories could be
   ;; beneficial in large scale federations, although there may be significant
   ;; performance cost in calculating these advisories.
   ;; RANGE: An enumeration value {Enabled, Disabled}
   ;; DEFAULT VALUE: Enabled
   ;;
   (ClassRelevanceAdvisories Disabled
   
    ;; PARAMETER: FederationSection.Advisories.ClassRelevanceAdvisories.
    ;;            AdvisorySwitchDefault
    ;; DESCRIPTION: This parameter controls the switch to define if the object
    ;; class relevance advisory mechanism is enabled or disabled by default
    ;; when the federate begins.  This parameter only determines whether
    ;; a federate will receive Start/StopRegistrationForObjectClass callbacks.
    ;; This parameter does NOT control whether the LRC maintains the proper
    ;; state to determine whether callbacks should be made, thus, this
    ;; parameter will not impact LRC performance.
    ;; RANGE: An enumeration value {Enabled, Disabled}
    ;; DEFAULT VALUE: Enabled
    ;;
    ;;(AdvisorySwitchDefault Enabled)

    ;; PARAMETER: FederationSection.Advisories.ClassRelevanceAdvisories.
    ;;            TransportMechanism
    ;; DESCRIPTION: This parameter controls the network transportation
    ;; mechanism used to maitain class relevance advisory state.  TCP
    ;; will use a reliable TCP/IP connections to send internal LRC messages;
    ;; UDPmulticast will use UDP multicast to maintain state.  TCP messages
    ;; are reliable and relatively slow while UDP multicast messages may
    ;; be much faster but are unreliable.  WARNING:  if UDPmulticast is
    ;; selected, Start/StopRegistrationForObjectClass callbacks could be
    ;; missed and the federate will NOT be notified of this.  Do NOT select
    ;; UDPmulticast if your federation relies on
    ;; Start/StopRegistrationForObjectClass callbacks being generated reliably.
    ;; RANGE: An enumeration value {TCP, UDPmulticast}
    ;; DEFAULT VALUE: TCP
    ;;
    ;;(TransportMechanism TCP)

    ;; PARAMETER: FederationSection.Advisories.ClassRelevanceAdvisories.
    ;;            HeartbeatInSeconds
    ;; DESCRIPTION: The relevance advisory object class heartbeat parameter
    ;; controls how often each federate will broadcast object class subscription
    ;; information to the other RTI nodes in order to calculate if there is a
    ;; federate that has an interest in a particular object class.  The
    ;; heartbeat mechanism is used as a more scalable approach than requiring
    ;; each federate to buffer global subscription knowledge for the entire
    ;; federation.  If the parameter ClassRelevanceAdvisories is disabled,
    ;; this parameter is ignored.  If the object class
    ;; relevance advisories are being used the heartbeat rate should be the
    ;; maximum delay in receiving the advisory that is tolerable.
    ;; RANGE: A floating point value greater than zero
    ;; DEFAULT VALUE: 10.0
    ;;
    ;;(HeartbeatInSeconds 10.0)

    ;; PARAMETER: FederationSection.Advisories.ClassRelevanceAdvisories.
    ;;            TimeoutInSeconds
    ;; DESCRIPTION: The relevance advisory object class timeout parameter
    ;; defines how long a federate will wait to receive a relevance object
    ;; class subscription heartbeat that matches a particular object class.
    ;; A match is necessary to inform the federate that there is
    ;; interest.  The heartbeat mechanism is used as a more scalable approach
    ;; than requiring each federate to buffer global subscription knowledge for
    ;; the entire federation.  If the parameter ClassRelevanceAdvisories is
    ;; disabled, this parameter is ignored.
    ;; If the relevance advisories are being used the timeout rate should be at
    ;; least twice that of the heartbeat rate.
    ;; RANGE: A floating point value greater than zero
    ;; DEFAULT VALUE: 30.0
    ;;
    ;;(TimeoutInSeconds 30.0)
   )



   ;; PARAMETER: FederationSection.Advisories.AttributeRelevanceAdvisories
   ;; DESCRIPTION: This parameter controls whether attribute instance
   ;; advisories are computed and maintained within the LRC.  If this advisory
   ;; is disabled, then TurnUpdatesOn/OffForObjectInstance callbacks will
   ;; not be generated nor will any internal LRC messages be sent or
   ;; computations be done to maintain the attribute instance relevance advisory
   ;; state.  When enabled, the attribute instance relevance advisories will
   ;; inform the federate if there exists any other federate within the
   ;; federation that is subscribed to a particular attribute instance.  The
   ;; relevance advisories could be beneficial in large scale federations,
   ;; although there may be a VERY significant performance cost in calculating
   ;; these advisories.
   ;; RANGE: An enumeration value {Enabled, Disabled}
   ;; DEFAULT VALUE: Disabled
   ;;
   (AttributeRelevanceAdvisories Disabled

    ;; PARAMETER: FederationSection.Advisories.AttributeRelevanceAdvisories.
    ;;            AdvisorySwitchDefault
    ;; DESCRIPTION: This parameter controls the switch to define if the object
    ;; attribute relevance advisory mechanism is enabled or disabled by default
    ;; when the federate begins.  This parameter only determines whether
    ;; a federate will receive TurnUpdatesOn/OffForObjectInstance callbacks.
    ;; This parameter does NOT control whether the LRC maintains the proper
    ;; state to determine whether callbacks should be made, thus, this
    ;; parameter will not impact LRC performance.
    ;; RANGE: An enumeration value {Enabled, Disabled}
    ;; DEFAULT VALUE: Disabled
    ;;
    ;;(AdvisorySwitchDefault Disabled)

    ;; PARAMETER: FederationSection.Advisories.AttributeRelevanceAdvisories.
    ;;            TransportMechanism
    ;; DESCRIPTION: This parameter controls the network transportation
    ;; mechanism used to maitain attribute relevance advisory state.  TCP
    ;; will use a reliable TCP/IP connections to send internal LRC messages;
    ;; UDPmulticast will use UDP multicast to maintain state.  TCP messages
    ;; are reliable and relatively slow while UDP multicast messages may
    ;; be much faster but are unreliable.  WARNING:  if UDPmulticast is
    ;; selected, TurnUpdatesOn/OffForObjectInstance callbacks could be
    ;; missed and the federate will NOT be notified of this.  Do NOT select
    ;; UDPmulticast if your federation relies on
    ;; TurnUpdatesOn/OffForObjectInstance callbacks being generated reliably.
    ;; RANGE: An enumeration value {TCP, UDPmulticast}
    ;; DEFAULT VALUE: TCP
    ;;
    ;;(TransportMechanism TCP)

    ;; PARAMETER: FederationSection.Advisories.AttributeRelevanceAdvisories.
    ;;            HeartbeatInSeconds
    ;; DESCRIPTION: The relevance advisory attribute instance heartbeat
    ;; parameter controls how often each federate will broadcast attribute 
    ;; instance subscription information to the other RTI nodes in order to
    ;; calculate if there is a federate that has an interest in a particular
    ;; attribute instance.  The heartbeat mechanism is used as a more scalable
    ;; approach than requiring each federate to buffer global subscription
    ;; knowledge for the entire federation.  If the parameter
    ;; AttributeRelevanceAdvisories is disabled, this parameter is ignored.
    ;; If the attribute instance relevance advisories are being used the
    ;; heartbeat rate should be the maximum delay in receiving the advisory that
    ;; is tolerable.
    ;; RANGE: A floating point value greater than zero
    ;; DEFAULT VALUE: 10.0
    ;;
    ;;(HeartbeatInSeconds 10.0)

    ;; PARAMETER: FederationSection.Advisories.AttributeRelevanceAdvisories.
    ;;            TimeoutInSeconds
    ;; DESCRIPTION: The relevance advisory attribute instance timeout parameter
    ;; defines how long a federate will wait to receive a relevance attribute
    ;; instance subscription heartbeat that matches a particular attribute
    ;; instance. A match is necessary to inform the federate that there is
    ;; interest.  The heartbeat mechanism is used as a more scalable approach
    ;; than requiring each federate to buffer global subscription knowledge for
    ;; the entire federation.  If the parameter AttributeRelevanceAdvisories
    ;; is disabled, this parameter is ignored.
    ;; If the relevance advisories are being used the timeout rate should be at
    ;; least twice that of the heartbeat rate.
    ;; RANGE: A floating point value greater than zero
    ;; DEFAULT VALUE: 30.0
    ;;
    ;;(TimeoutInSeconds 30.0)
   )
   


   ;; PARAMETER: FederationSection.Advisories.AttributeScopeAdvisories
   ;; DESCRIPTION: This parameter controls whether attribute scope
   ;; advisories are computed and maintained within the LRC.  If this advisory
   ;; is disabled, then AttributesIn/OutOfScope callbacks will
   ;; not be generated nor will any internal LRC messages be sent or
   ;; computations be done to maintain the attribute scope relevance advisory
   ;; state.  When enabled, the attribute scope advisories will
   ;; inform the federate if a particular attribute instance being updated
   ;; from another federate matches the federates subscriptions.  If the
   ;; attribute is in scope the federate will receive any updates, and if the
   ;; attribute is out of scope any updates will not be reflected.
   ;; Scoping is ALSO using in the RTI-NG as a means of discovering objects.
   ;; If a federation is not using scoping, then disabling scope advisories
   ;; could have a very positive impact on performance.
   ;; RANGE: An enumeration value {Enabled, Disabled}
   ;; DEFAULT VALUE: Enabled
   ;;
   (AttributeScopeAdvisories Disabled

    ;; PARAMETER: FederationSection.Advisories.AttributeScopeAdvisories.
    ;;            AdvisorySwitchDefault
    ;; DESCRIPTION: This parameter controls the switch to define if the object
    ;; attribute scope advisory mechanism is enabled or disabled by default
    ;; when the federate begins.  This parameter only determines whether
    ;; a federate will receive AttributesIn/OutOfScope callbacks.
    ;; This parameter does NOT control whether the LRC maintains the proper
    ;; state to determine whether callbacks should be made, thus, this
    ;; parameter will not impact LRC performance.
    ;; RANGE: An enumeration value {Enabled, Disabled}
    ;; DEFAULT VALUE: Disabled
    ;;
    ;;(AdvisorySwitchDefault Disabled)

    ;; PARAMETER: FederationSection.Advisories.AttributeScopeAdvisories.
    ;;            TransportMechanism
    ;; DESCRIPTION: This parameter controls the network transportation
    ;; mechanism used to maitain attribute scope advisory state.  TCP
    ;; will use a reliable TCP/IP connections to send internal LRC messages;
    ;; UDPmulticast will use UDP multicast to maintain state.  TCP messages
    ;; are reliable and relatively slow while UDP multicast messages may
    ;; be much faster but are unreliable.  WARNING:  if UDPmulticast is
    ;; selected, AttributesIn/OutOfScope callbacks could be
    ;; missed and the federate will NOT be notified of this.  Furthermore,
    ;; since NG handles object discoveries though scope advisories, object
    ;; discovery could be delayed.  Do NOT select UDPmulticast if your
    ;; federation relies on AttributesIn/OutOfScope callbacks being generated
    ;; reliably or if object discoveries must be delivered in a timely manor
    ;; (see LazyObjectDiscovery below).
    ;; RANGE: An enumeration value {TCP, UDPmulticast}
    ;; DEFAULT VALUE: TCP
    ;;
    ;;(TransportMechanism TCP)

    ;; PARAMETER: FederationSection.Advisories.AttributeScopeAdvisories.
    ;;            LazyObjectDiscovery
    ;; DESCRIPTION: When this parameter is enabled, a discoverObjectInstance
    ;; callback will be generated if an updateAttributeValue message arrives
    ;; at an LRC for an object that has not been discovered yet but should
    ;; have been.  This parameter is useful for federations that call
    ;; registerObjectInstance followed immediately by an updateAttributeValue.
    ;; The Spec does not guarantee that the register will arrive prior
    ;; to the update and thus the update could be dropped.  With lazy discovery
    ;; enabled, an update arriving before a register will not be dropped but
    ;; will instead generate a discover followed by an update.  This
    ;; parameter MUST be enabled if AttributeScopeAdvisories is Disabled or
    ;; AttributeScopeAdvisories.TransportMechanism is UDPmulticast.  Enabling
    ;; this parameter incurs additional overhead as more information must be
    ;; sent with each update.
    ;; RANGE: An enumeration value {Enabled, Disabled}
    ;; DEFAULT VALUE: Disabled
    ;;
    (LazyObjectDiscovery Enabled)
   )



   (ProvideAttributeValueUpdate
    ;; PARAMETER: FederationSection.Advisories.ProvideAttributeValueUpdate.
    ;;            TransportMechanism
    ;; DESCRIPTION: This parameter controls the network transportation
    ;; mechanism used to send RequestAttributeValueUpdate messages.  TCP
    ;; will use a reliable TCP/IP connections to send internal LRC messages;
    ;; UDPmulticast will use UDP multicast.  TCP messages
    ;; are reliable and relatively slow while UDP multicast messages may
    ;; be much faster but are unreliable.  WARNING:  if UDPmulticast is
    ;; selected, ProvideAttributeValueUpdate callbacks could be
    ;; missed and the federate will NOT be notified of this. Do NOT select
    ;; UDPmulticast if your federation relies on ProvideAttributeValueUpdate
    ;; callbacks being generated reliably.
    ;; RANGE: An enumeration value {TCP, UDPmulticast}
    ;; DEFAULT VALUE: TCP
    ;;
    (TransportMechanism UDPmulticast)

    ;; PARAMETER: FederationSection.Advisories.ProvideAttributeValueUpdate.
    ;;            DelayTimeInSeconds
    ;; DESCRIPTION: The provide attribute value update delay time parameter
    ;; defines the amount of time that a federate will "hold onto" a
    ;; object-instance-level provideAttributeValueUpdate command before
    ;; delivering it to the federate ambassador.  While the command is being
    ;; held, if identical provideAttributeValueUpdate commands are generated,
    ;; then only one is eventually delivered.  This behavior potentially
    ;; reduces the number of identical provideAttributeValueUpdate commands a 
    ;; federate must process in a given time period.  Furthermore, the reduced
    ;; network traffic due fewer resulting updateAttributeValue commands
    ;; can also greatly improve performance.
    ;; RANGE: A non-negative floating point value.
    ;; DEFAULT VALUE: 0.0
    ;;
    (DelayTimeInSeconds 5.0)
   )



   (DeleteObjectInstance
    ;; PARAMETER: FederationSection.Advisories.DeleteObjectInstance.
    ;;            TransportMechanism
    ;; DESCRIPTION: This parameter controls the network transportation
    ;; mechanism used to send DeleteObjectInstance messages.  TCP
    ;; will use a reliable TCP/IP connections to send internal LRC messages;
    ;; UDPmulticast will use UDP multicast.  TCP messages
    ;; are reliable and relatively slow while UDP multicast messages may
    ;; be much faster but are unreliable.  WARNING:  if UDPmulticast is
    ;; selected, removeObjectInstance callbacks could be
    ;; missed and the federate will NOT be notified of this. Do NOT select
    ;; UDPmulticast if your federation relies on removeObjectInstance
    ;; callbacks being generated reliably.
    ;; RANGE: An enumeration value {TCP, UDPmulticast}
    ;; DEFAULT VALUE: TCP
    ;;
    (TransportMechanism UDPmulticast)
   )



   (Retract
    ;; PARAMETER: FederationSection.Advisories.Retract.TransportMechanism
    ;; DESCRIPTION: This parameter controls the network transportation
    ;; mechanism used to send retract messages.  TCP
    ;; will use a reliable TCP/IP connections to send internal LRC messages;
    ;; UDPmulticast will use UDP multicast.  TCP messages
    ;; are reliable and relatively slow while UDP multicast messages may
    ;; be much faster but are unreliable.  WARNING:  if UDPmulticast is
    ;; selected, requestRetraction callbacks could be
    ;; missed and the federate will NOT be notified of this. Do NOT select
    ;; UDPmulticast if your federation relies on requestRetraction
    ;; callbacks being generated reliably.
    ;; RANGE: An enumeration value {TCP, UDPmulticast}
    ;; DEFAULT VALUE: TCP
    ;;
    (TransportMechanism UDPmulticast)
   )

  );; End of FederationSection.Advisories

  (TimeManagement
   ;; This section contains parameters related to the RTI Time Management
   ;; services.


   ;; PARAMETER: FederationSection.TimeManagement.
   ;;   ForceContinue
   ;; DESCRIPTION: This parameter is used to control if the LBTS
   ;; Master will eventually give up on waiting for an LBTS calculation
   ;; to complete, and force the calculation to continue.
   ;; RANGE: {ON, OFF}
   ;; DEFAULT_VALUE: OFF
   ;;;; (ForceContinue OFF)

   ;; PARAMETER: FederationSection.TimeManagement.
   ;;   AutoWhackStrikes
   ;; DESCRIPTION: This parameter is used to control if the LBTS
   ;; Master will unilaterally remove unresponsive federates after
   ;; a certain period of time in an effort to continue federation
   ;; execution. The number is the number of timeouts to wait before 
   ;; removing the federates. A value of 0 is the same as "OFF".  The 
   ;; RID parameter ForceContinue must be set to "ON" for this feature 
   ;; to work.
   ;; RANGE: {OFF, integers}
   ;; DEFAULT_VALUE: 0
   ;;;; (AutoWhackStrikes 0)

   ;; PARAMETER: FederationSection.TimeManagement.
   ;;   TimeToWaitForLbtsCalculationsBeforeErrorInSeconds
   ;; DESCRIPTION: This parameter is used to control how long the LBTS (Lower
   ;; Bound on Time Stamp) calculation will stall before reporting an error.
   ;; The event synchronization algorithm requires coordination with all of the
   ;; federates when any federate becomes time regulating.  If in the process of
   ;; calculating the LBTS a federate becomes unresponsive the calculation will
   ;; stall and report an error after waiting the amount of time defined by this
   ;; parameter.
   ;; RANGE: A floating point value greater than zero. 
   ;; CONSISTENCY: This parameter is checked for consistency across the
   ;;  federation.
   ;; DEFAULT VALUE: 10.0
   ;;
   ;;;;    (TimeToWaitForLbtsCalculationsBeforeErrorInSeconds 10.0)

   ;; PARAMETER: FederationSection.TimeManagement.
   ;;            TimeToWaitInBetweenLbtsCalculationsInSeconds
   ;; DESCRIPTION: This parameter controls how long the synchronization process
   ;; will wait after completing an LBTS computation before initiating another
   ;; calculation.  A small value will allow the federation to advance logical
   ;; time more quickly, but will also increase the rate of computations and
   ;; communications.  The value should be based on the maximum rate (advances
   ;; per seconds of wallclock time) at which the federation would ever be
   ;; required to advance time.
   ;; RANGE: A floating point value greater than or equal to zero.
   ;; CONSISTENCY: This parameter is not checked for consistency across the
   ;;   federation.
   ;; DEFAULT VALUE: 0.050
   ;;
   ;;;;    (TimeToWaitInBetweenLbtsCalculationsInSeconds 0.050)

   (EventRetractionHandleCacheOptions
    ;; Each federate keeps a cache of Event Retraction Handles that it has
    ;; generated.  To prevent this cache from growing without bound, Event
    ;; Retraction Handles with a timestamp in the past are periodically purged.

    ;; IMPORTANT NOTE: setting both
    ;; MinimumCacheSizeBeforePerformingPurge and
    ;; NumberOfEventRetractionHandlesToCreateBeforeStartingNewPurgeCycle
    ;; to 0 will cause event retractions to be disabled.  For a
    ;; federation with time managed federates that is not using event
    ;; retractions, this will result in a minor performance
    ;; improvement and a significant drop in memory usage.

    ;; PARAMETER: FederationSection.TimeManagement.
    ;;  EventRetractionHandleCacheOptions.MinimumCacheSizeBeforePerformingPurge
    ;; DESCRIPTION: If the event retraction cache has fewer then
    ;; MinimumCacheSizeBeforePerformingPurge entries, purging will be skipped.
    ;; MAY BE SPECIFIED AT THE FEDERATE LEVEL
    ;; RANGE: An unsigned long
    ;; CONSISTENCY: This parameter is not checked for consistency across the
    ;;   federation.
    ;; DEFAULT_VALUE: 65535
    ;;
    ;;;;    (MinimumCacheSizeBeforePerformingPurge 65535)

    ;; PARAMETER: FederationSection.TimeManagement.
    ;;  EventRetractionHandleCacheOptions.
    ;;  NumberOfEventRetractionHandlesToCreateBeforeStartingNewPurgeCycle
    ;; DESCRIPTION: Purging of the Event Retraction Handle cache may occur if at
    ;; least NumberOfEventRetractionHandlesToCreateBeforeStartingNewPurgeCycle
    ;; Event Retraction Handles have been added to the cache since the last time
    ;; the cache was purged.
    ;; MAY BE SPECIFIED AT THE FEDERATE LEVEL
    ;; RANGE: An unsigned long
    ;; CONSISTENCY: This parameter is not checked for consistency across the
    ;;   federation.
    ;; DEFAULT_VALUE: 1024
    ;;
    ;;;;(NumberOfEventRetractionHandlesToCreateBeforeStartingNewPurgeCycle 1024)
   );; End of FederationSection.TimeManagement.EventRetractionHandleCacheOptions
  );; End of FederationSection.TimeManagement

  (DataDistribution
   ;; This section contains parameters related to the RTI Data Distribution
   ;; Management services.

   ;; PARAMETER: FederationSection.DataDistribution.StrategyToUse
   ;; DESCRIPTION: The routing of federation data using the RTI Data
   ;; Distribution Management (DDM) services can be implemented using different
   ;; techniques.  Each technique will have different characteristics that may
   ;; effect the performance of DDM depending on the particular operating
   ;; conditions of the federation.  The initial data routing strategies offered
   ;; are:
   ;;   Simple - Uses two data channels, one for Best Effort and one for
   ;; Reliable transport.  This scheme provides no segmentation of data based on
   ;; DDM usage and is useful for testing purposes.
   ;;   StaticSpacePartitioned - Uses two channels per routing space, one for
   ;; Best Effort and one for Reliable transport.  This scheme segments data
   ;; according to the routing space that a particular class or attribute is
   ;; assigned to in the RID file.  This mechanism provides a simplification to
   ;; the grid partitioned scheme in which segmentation is only required based
   ;; on the routing space, not the particular update and subscription regions
   ;; within a space.
   ;;   StaticGridPartitioned - Uses two channels (Best Effort and Reliable) for
   ;; each hypercube formed by partitioning each dimension of a routing space in
   ;; a grid like fashion.  The number of partitions in each dimension is user
   ;; defined.  This scheme offers the federation control of how to statically
   ;; segment federation traffic for their particular exercise.
   ;; RANGE: An enumeration value {Simple, StaticSpacePartitioned, 
   ;; StaticGridPartioned}.
   ;;   ClassPartitioned - Uses two channels (Best Effort & Reliable) for
   ;; each Object & Interaction Class defined in the .fed file.  All routing
   ;; is based on the class types of the objects/interactions being
   ;; published or subscribed.  Publishers send to the single channel
   ;; associated with the class type used to create the object/interactions.
   ;; Subscribers subscribe to all channels associated with the subscribed
   ;; class type as well as all derrived class types.  Region information
   ;; is largely ignored for routing purposes.  However, region filtering is
   ;; performed at the receiver's LRC.  This strategy is best suited for
   ;; non-DDM federations.
   ;;   UserDefined - Custom DDM strategy written by user.
   ;;
   ;;
   ;; Value MC02 is also valid.  This strategy assumes that there is exactly
   ;; one 3D space defined in the FED (RtiInternal exception otherwise).  The
   ;; first dimension may be partitioned into N parts which represent
   ;; subspaces.  The user may then specify the number of partitions
   ;; to divide the 2nd & 3rd dimensions for each of the N subspace partitions.
   ;; Partitioning is defined in the MC02StrategyOptions section.  No TCP
   ;; communication channels are created with this strategy.
   ;;
   ;;
   ;; CONSISTENCY: This parameter is checked for consistency across the
   ;;              federation.
   ;; DEFAULT VALUE: StaticGridPartitioned
   ;;
   ;;;;    (StrategyToUse StaticGridPartitioned)
   (StrategyToUse MC02)

   ;; PARAMETER: FederationSection.DataDistribution.MaxNumberOfRegions
   ;; DESCRIPTION: This parameter is used to determine the number of bytes
   ;; needed to send certain advisory notices.  This value limits the
   ;; maximum number of regions that may exist concurrently.  The value is
   ;; used only limit the number of bytes that are sent across the network.
   ;; Overspecifying this value can lead to poor network performance. 
   ;; Underspecifying the value will lead to errors being generated at
   ;; run-time during createRegion.  Note that only values crossing byte
   ;; boundaries are significant.  E.g. values 0x00-0xff perform identically,
   ;; values 0x100-0xffff perform identically but worse than the first example,
   ;; and finally values 0x10000-0xffffffff perform the worst.
   ;; RANGE: A 32-bit integer value specified in hexadecimal (prefaced with 0x)
   ;;        or decimal.
   ;; DEFAULT_VALUE: 0xffffffff
   ;;
   ;;;;    (MaxNumberOfRegions 0xffffffff)

   ;; PARAMETER: FederationSection.DataDistribution.ReceiverSideFiltering
   ;; DESCRIPTION: This parameter is used to determine whether region
   ;; filtering is performed on the receiver side.  If ReceiverSideFiltering
   ;; is enabled, then the RTI behaves in a Spec compliant manor guaranteeing
   ;; that updates and interactions are received ONLY if publication & 
   ;; subscription regions intersect.  If ReceiverSideFiltering is disabled,
   ;; updates & interactions may be received by the federate even if pub/sub
   ;; regions do not intersect; only sender-side filtering is performed.  The
   ;; effect of this parameter depends upon the DDM strategy used, the regions
   ;; used, and the partitioning within the DDM strategy.  When disabled, this
   ;; parameter can significantly reduce the amount of network traffic and
   ;; CPU usage.
   ;; RANGE: An enumeration value {Enabled, Disabled}
   ;; DEFAULT_VALUE: Enabled
   ;;
   ;;;;    (ReceiverSideFiltering Enabled)
   (ReceiverSideFiltering Disabled)

   ;; PARAMETER: FederationSection.DataDistribution.FilteringStatisticsDefault
   ;; DESCRIPTION: This parameter is used to whether filtering statistics are 
   ;; gathered
   ;; RANGE: An enumeration value {Enabled, Disabled}
   ;; CONSISTENCY: This parameter is not checked for consistency across the
   ;;              federation.
   ;; DEFAULT_VALUE: Enabled
   ;;
   ;;;;    (FilteringStatisticsDefault Disabled)

   (Options
    ;; This section contains parameters associated with the DDM implementations.

    ;; PARAMETER: FederationSection.DataDistribution.BestEffortChannelType
    ;; DESCRIPTION: This parameter allows for the specification of the
    ;; particular channel type for all Best Effort traffic.  Currently a UDP
    ;; multicast and TCP channel type are supported.  Additional channel types
    ;; may be available in future releases.
    ;; RANGE: An enumeration value {UDPmulticast, TCP}.
    ;; CONSISTENCY: This parameter is checked for consistency across the
    ;;              federation.
    ;; DEFAULT_VALUE: UDPmulticast
    ;;
    ;;;;    (BestEffortChannelType UDPmulticast)

    ;; PARAMETER: FederationSection.DataDistribution.ReliableChannelType
    ;; DESCRIPTION: This parameter allows for the specification of the
    ;; particular channel type for all Reliable traffic.  Currently a UDP
    ;; multicast and TCP channel type are supported.  Additional channel types
    ;; may be available in future releases.
    ;; RANGE: An enumeration value {UDPmulticast, TCP}.
    ;; CONSISTENCY: This parameter is checked for consistency across the
    ;;              federation.
    ;; DEFAULT_VALUE: TCP
    ;;
    ;;;;    (ReliableChannelType TCP)

    ;; PARAMETER: FederationSection.DataDistribution.Options.
                  RestrictPublicationRegions
    ;; DESCRIPTION: This parameter restricts regions used for updates &
    ;; interactions such that each region may not cross any DDM partition
    ;; boundaries.  If set to YES, then this parameter will cause an
    ;; exception to be thrown if an update or interaction is sent using
    ;; a region that would cause multiple messages to be sent.  Using a value
    ;; of Yes can increase performance at the cost of restricted region use.
    ;; This value MUST be "Yes" if ProcessSection.Networking.MulticastOptions.
    ;; FilterDuplicatePackets is set to "Off".
    ;; RANGE: An enumeration value {Yes, No}.
    ;; DEFAULT_VALUE: No
    ;;
    (RestrictPublicationRegions Yes)

    (StaticGridPartitionedStrategyOptions
     ;; This section contains parameters related to the static grid strategy.


     ;; PARAMETER: FederationSection.DataDistribution.
     ;;  StaticGridPartitionedStrategyOptions.PrintMulticastChannelMapping
     ;; DESCRIPTION: When set to "yes", this parameter causes the RTI
     ;; to print the mapping between multicast channels and regions.
     ;; This parameter can aid in the setup of federations particularly with
     ;; firewalls where the multicast groups must be known in advance.
     ;; Output is sent to stdout.
     ;; RANGE: An enumeration value {Yes, No}.
     ;; CONSISTENCY: This parameter is not checked for consistency across the
     ;;              federation.
     ;; DEFAULT_VALUE: No
     ;;
     ;; (PrintMulticastChannelMapping No)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;            StaticGridPartitionedStrategyOptions.DisableTCPCommunication
     ;; DESCRIPTION: When set to "yes", this parameter disables all TCP
     ;; communication.  Furthermore no TCP connections/channels are created.
     ;; Any reliable updates/interactions/internal messages are sent 
     ;; best effort via multicast.  CAUTION, setting this value to "yes"
     ;; can have serious consequences and should only be done by expert
     ;; users.
     ;; RANGE: An enumeration value {Yes, No}.
     ;; DEFAULT_VALUE: No
     ;;
     (DisableTCPCommunication Yes)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;            StaticGridPartitionedStrategyOptions.DelayTCPchannelCreation
     ;; DESCRIPTION: This parameter is used to control when TCP/IP connections
     ;; are created and initialized.  When this parameter is set to the default
     ;; value of "No", then all TCP/IP connections are created during RTI
     ;; startup.  If "Yes" is specified, then TCP/IP connections are created
     ;; and initialized as needed during federate execution.  TCP connection
     ;; creation can be a timely expense.  If a federate is using many TCP
     ;; channels and cannot tolerate a large latency during a subscription
     ;; or publication modification then a value of "No" should be used here
     ;; and all costs will be incurred during startup.  If a federate is not
     ;; using many TCP channels (i.e. best effort traffic only or minimal
     ;; gridding), then a value of "Yes" may be better.
     ;; RANGE: An enumeration value {Yes, No}.
     ;; DEFAULT_VALUE: No
     ;;
     (DelayTCPchannelCreation Yes)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;     StaticGridPartitionedStrategyOptions.MaxNumberOfTcpDataChannelsToUse
     ;; DESCRIPTION: This parameter is used to define the maximum number of TCP
     ;; data channels to be used by the segmentation of all routing spaces.  A
     ;; larger number of channels may provide more effective segmentation of the
     ;; federation data.  The TCP mechanism for Reliable traffic has a 2^32 limit 
     ;; on the number of channels due to the fact that a 32 bit quantity is used 
     ;; to address the data.
     ;; RANGE: An integer value greater than zero.
     ;; CONSISTENCY: This parameter is checked consistency across the
     ;;              federation.
     ;; DEFAULT_VALUE: 64
     ;;
     ;;;;     (MaxNumberOfTcpDataChannelsToUse 64)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;     StaticGridPartitionedStrategyOptions.MaxNumberOfUdpDataChannelsToUse
     ;; DESCRIPTION: This parameter is used to define the maximum number of UDP
     ;; data channels to be used by the segmentation of all routing spaces.  A
     ;; larger number of channels may provide more effective segmentation of the
     ;; federation data, but for Best Effort traffic using UDP the segmentation
     ;; can be limited by the number of available multicast addresses (see
     ;; MulticastOptions in the FederationSection).  If the maximum number of
     ;; channels exceed the available multicast addresses the algorithm will
     ;; reuse the addresses and therefore reducing segmentation efficiency.
     ;; RANGE: An integer value greater than zero.
     ;; CONSISTENCY: This parameter is checked consistency across the
     ;;              federation.
     ;; DEFAULT_VALUE: 64
     ;;
          (MaxNumberOfUdpDataChannelsToUse 1)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;            StaticGridPartitionedStrategyOptions.NumPartitionsPerDimension
     ;; DESCRIPTION: This parameter is used to define the default number of
     ;; partitions that are used for each dimension to segment the space.  A
     ;; larger number of partitions will increase segmentation (provided there
     ;; is not a limit with the number of channels to use or a limit in the
     ;; number of multicast addresses for UDP).  Further refinement to the space
     ;; partitioning can be accomplished by having different decimation for
     ;; different dimensions in different spaces using the parameters in the
     ;; SpaceOptions section.
     ;; RANGE: An integer value greater than zero.
     ;; CONSISTENCY: This parameter is checked consistency across the federation.
     ;; DEFAULT_VALUE: 1
     ;;
     ;;;;     (NumPartitionsPerDimension 1)


     (Administration
     ;; This section deals with parameters specific to the Administrative
     ;; channels.
     
      ;; PARAMETER: FederationSection.DataDistribution.
      ;;   StaticGridPartitionedStrategyOptions.Administration.BundlingOptions
      ;; DESCRIPTION: These parameters control the bundling options for the
      ;; administrative channels of the RTI.  The format follows the format
      ;; of the Networking.BundingOptions section.  The values entered here
      ;; will override the Networking.BundlingOptions for the administrative
      ;; channels only.
      ;;
      (BundlingOptions
       (UDP
        ;; PARAMETER: FederationSection.DataDistribution.
        ;;            StaticGridPartitionedStrategyOptions.Administration.
        ;;            BundlingOptions.UDP.MaxTimeBeforeSendInSeconds
        ;; DESCRIPTION: This parameter is the maximum amount of time that the RTI
        ;; will wait before the RTI flushes the data.  If set to 0, bundling will
        ;; be disabled.
        ;; RANGE: A floating point value greater than or equal to zero.
        ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
        ;; DEFAULT VALUE: 0.005
        ;;
        (MaxTimeBeforeSendInSeconds 0.05)

        ;; PARAMETER: FederationSection.DataDistribution.
        ;;            StaticGridPartitionedStrategyOptions.Administration.
        ;;            BundlingOptions.UDP.MaxBytesBeforeSend
        ;; DESCRIPTION: This parameter is the maximum number of bytes that will be
        ;; bundled before the RTI flushes the data.
        ;; RANGE: An integer value greater than or equal to zero.
        ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
        ;; DEFAULT VALUE: 63000
        (MaxBytesBeforeSend    63000)
       )
       (TCP
        ;; PARAMETER: FederationSection.DataDistribution.
        ;;            StaticGridPartitionedStrategyOptions.Administration.
        ;;            BundlingOptions.TCP.MaxTimeBeforeSendInSeconds
        ;; DESCRIPTION: This parameter is the maximum amount of time that the RTI
        ;; will wait before the RTI flushes the data.  If set to 0, bundling will
        ;; be disabled.
        ;; RANGE: A floating point value greater than or equal to zero.
        ;; DEFAULT VALUE: 0.005
        ;;
        (MaxTimeBeforeSendInSeconds 0.05)

        ;; PARAMETER: FederationSection.DataDistribution.
        ;;            StaticGridPartitionedStrategyOptions.Administration.
        ;;            BundlingOptions.TCP.MaxBytesBeforeSend
        ;; DESCRIPTION: This parameter is the maximum number of bytes that will be
        ;; bundled before the RTI flushes the data.
        ;; RANGE: An integer value greater than or equal to zero.
        ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
        ;; DEFAULT VALUE: 63000
        ;;
        (MaxBytesBeforeSend    63000)
       )
      )
     )

     (MOM
     ;; This section deals with parameters specific to the MOM channels.
     
      ;; PARAMETER: FederationSection.DataDistribution.
      ;;   StaticGridPartitionedStrategyOptions.MOM.BundlingOptions
      ;; DESCRIPTION: These parameters control the bundling options for the
      ;; MOM channels of the RTI.  The format follows the format
      ;; of the Networking.BundingOptions section.  The values entered here
      ;; will override the Networking.BundlingOptions for the MOM
      ;; channels only.
      ;;
      (BundlingOptions
       (UDP
        ;; PARAMETER: FederationSection.DataDistribution.
        ;;            StaticGridPartitionedStrategyOptions.MOM.
        ;;            BundlingOptions.UDP.MaxTimeBeforeSendInSeconds
        ;; DESCRIPTION: This parameter is the maximum amount of time that the RTI
        ;; will wait before the RTI flushes the data.  If set to 0, bundling will
        ;; be disabled.
        ;; RANGE: A floating point value greater than or equal to zero.
        ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
        ;; DEFAULT VALUE: 0.005
        ;;
        ;;
        (MaxTimeBeforeSendInSeconds 0.05)

        ;; PARAMETER: FederationSection.DataDistribution.
        ;;            StaticGridPartitionedStrategyOptions.MOM.
        ;;            BundlingOptions.UDP.MaxBytesBeforeSend
        ;; DESCRIPTION: This parameter is the maximum number of bytes that will be
        ;; bundled before the RTI flushes the data.
        ;; RANGE: An integer value greater than or equal to zero.
        ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
        ;; DEFAULT VALUE: 63000
        ;;
        (MaxBytesBeforeSend    63000)
       )
       (TCP
        ;; PARAMETER: FederationSection.DataDistribution.
        ;;            StaticGridPartitionedStrategyOptions.MOM.
        ;;            BundlingOptions.TCP.MaxTimeBeforeSendInSeconds
        ;; DESCRIPTION: This parameter is the maximum amount of time that the RTI
        ;; will wait before the RTI flushes the data.  If set to 0, bundling will
        ;; be disabled.
        ;; RANGE: A floating point value greater than or equal to zero.
        ;; DEFAULT VALUE: 0.005
        ;;
        (MaxTimeBeforeSendInSeconds 0.05)

        ;; PARAMETER: FederationSection.DataDistribution.
        ;;            StaticGridPartitionedStrategyOptions.MOM.
        ;;            BundlingOptions.TCP.MaxTimeBeforeSendInSeconds
        ;; DESCRIPTION: This parameter is the maximum amount of time that the RTI
        ;; will wait before the RTI flushes the data.  If set to 0, bundling will
        ;; be disabled.
        ;; RANGE: A floating point value greater than or equal to zero.
        ;; DEFAULT VALUE: 0.005
        ;;
        (MaxBytesBeforeSend    63000)
       )
      )
     )

     (SpaceOptions
      ;; The SpaceOptions Section enables the number of partitions on any given
      ;; dimension within any space to override the default.  Note that to
      ;; control these parameters they need to be defined based on the
      ;; particular routing space names used in the FED (Federation Execution
      ;; Data) file.  The examples below are shown for two spaces "SpaceA" and
      ;; "SpaceB", but these names would have to be replaced for use within a
      ;; particular federation.  The NumPartitions parameter is associated with
      ;; a particular numbered dimension (e.g., dimension1, dimension2) and
      ;; defines the decimation for that dimension in the appropriate routing
      ;; space.  BundlingOptions may also be specified for each space.  See
      ;; Networking.BundlingOptions for more information.
      ;; CONSISTENCY: This parameter is checked consistency across the
      ;; federation.

        (HyperSpace
          (DimensionOptions
             (subspace (NumPartitions 1))
             (one (NumPartitions 1))
             (two (NumPartitions 1))
          )
        )

     );; End of ...StaticGridPartitionedStrategyOptions.SpaceOptions
    );; End of ...DataDistribution.StaticGridPartitionedStrategyOptions

    (ClassPartitionedStrategyOptions
     ;; This section contains parameters related to the class partitioned
     ;; strategy.


     ;; PARAMETER: FederationSection.DataDistribution.
     ;;  ClassPartitionedStrategyOptions.PrintMulticastChannelMapping
     ;; DESCRIPTION: When set to "yes", this parameter causes the RTI
     ;; to print the mapping between multicast channels and regions.
     ;; This parameter can aid in the setup of federations particularly with
     ;; firewalls where the multicast groups must be known in advance.
     ;; Output is sent to stdout.
     ;; RANGE: An enumeration value {Yes, No}.
     ;; CONSISTENCY: This parameter is checked consistency across the
     ;; DEFAULT_VALUE: No
     ;;
     ;; (PrintMulticastChannelMapping No)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;  ClassPartitionedStrategyOptions.DisableTCPCommunication
     ;; DESCRIPTION: When set to "yes", this parameter disables all TCP
     ;; communication.  Furthermore no TCP connections/channels are created.
     ;; Any reliable updates/interactions/internal messages are sent 
     ;; best effort via multicast.  CAUTION, setting this value to "yes"
     ;; can have serious consequences and should only be done by expert
     ;; users.
     ;; RANGE: An enumeration value {Yes, No}.
     ;; DEFAULT_VALUE: No
     ;;
     ;;;;(DisableTCPCommunication No)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;   ClassPartitionedStrategyOptions.DelayTCPchannelCreation
     ;; DESCRIPTION: This parameter is used to control when TCP/IP connections
     ;; are created and initialized.  When this parameter is set to the default
     ;; value of "No", then all TCP/IP connections are created during RTI
     ;; startup.  If "Yes" is specified, then TCP/IP connections are created
     ;; and initialized as needed during federate execution.  TCP connection
     ;; creation can be a timely expense.  If a federate is using many TCP
     ;; channels and cannot tolerate a large latency during a subscription
     ;; or publication modification then a value of "No" should be used here
     ;; and all costs will be incurred during startup.  If a federate is not
     ;; using many TCP channels (i.e. best effort traffic only or minimal
     ;; gridding), then a value of "Yes" may be better.
     ;; RANGE: An enumeration value {Yes, No}.
     ;; DEFAULT_VALUE: No
     ;;
     ;;;;(DelayTCPchannelCreation No)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;   ClassPartitionedStrategyOptions.MaxNumberOfDataChannelsToUse
     ;; DESCRIPTION: This parameter is used to define the maximum number of data
     ;; channels to be used by the segmentation of all routing spaces.  A
     ;; larger number of channels may provide more effective segmentation of the
     ;; federation data, but for Best Effort traffic using UDP the segmentation
     ;; can be limited by the number of available multicast addresses (see
     ;; MulticastOptions in the FederationSection).  If the maximum number of
     ;; channels exceed the available multicast addresses the algorithm will
     ;; reuse the addresses and therefore reducing segmentation efficiency.
     ;; The TCP mechanism for Reliable traffic has a 2^32 limit on the number of
     ;; channels due to the fact that a 32 bit quantity is used to address the
     ;; data.
     ;; RANGE: An integer value greater than zero.
     ;; CONSISTENCY: This parameter is checked consistency across the federation.
     ;; DEFAULT_VALUE: 64
     ;;
     ;;;;     (MaxNumberOfDataChannelsToUse 64)
    );; End of ...DataDistribution.ClassPartitionedStrategyOptions

    (UserDefinedOptions
     ;; This section contains parameters related to the user-defined strategy.

     ;; PARAMETER: FederationSection.DataDistribution.UserDefinedOptions.
     ;;            InitializationOptions
     ;; DESCRIPTION: This parameter is passed through to the constructor of
     ;; the user ddm strategy.  The semantics of this parameter is specific
     ;; to the particular implementation used.
     ;;
     ;; See the documentation for your specific user ddm strategy to
     ;; determine the correct range of values.
     ;; RANGE: User-Defined.
     ;; CONSISTENCY: This parameter is NOT checked for consistency.
     ;; DEFAULT_VALUE: Empty string (i.e. "").
     ;;
     ;;;;     (InitializationOptions "Implementation-specific options")

     ;; PARAMETER: FederationSection.DataDistribution.UserDefinedOptions.
     ;;            MaxNumberOfDataChannelsToUse
     ;; DESCRIPTION: This parameter is used to define the maximum number of data
     ;; channels to be used by the segmentation of all routing spaces.  A
     ;; larger number of channels may provide more effective segmentation of the
     ;; federation data, but for Best Effort traffic using UDP the segmentation
     ;; can be limited by the number of available multicast addresses (see
     ;; MulticastOptions in the FederationSection).  If the maximum number of
     ;; channels exceed the available multicast addresses the algorithm will
     ;; reuse the addresses and therefore reducing segmentation efficiency.
     ;; The TCP mechanism for Reliable traffic has a 2^32 limit on the number of
     ;; channels due to the fact that a 32 bit quantity is used to address the
     ;; data.
     ;; RANGE: An integer value greater than zero.
     ;; CONSISTENCY: This parameter is checked consistency across the
     ;;              federation.
     ;; DEFAULT_VALUE: 64
     ;;
     ;;;;     (MaxNumberOfDataChannelsToUse 64)
     
    );; End of ...DataDistribution.UserDefinedOptions

    (MC02StrategyOptions
     ;; This section contains parameters related to the static grid strategy.

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;  MC02StrategyOptions.PrintMulticastChannelMapping
     ;; DESCRIPTION: When set to "yes", this parameter causes the RTI
     ;; to print the mapping between multicast channels and regions.
     ;; This parameter can aid in the setup of federations particularly with
     ;; firewalls where the multicast groups must be known in advance.
     ;; Output is sent to stdout.
     ;; RANGE: An enumeration value {Yes, No}.
     ;; DEFAULT_VALUE: No
     ;;
     (PrintMulticastChannelMapping No)

     ;; PARAMETER: FederationSection.DataDistribution.
     ;;  MC02StrategyOptions.FilenameForMulticastChannelMapping
     ;; DESCRIPTION: Optional parameter that specifies a file to write the
     ;; the multicast channel mapping.  If this parameter is not specified,
     ;; stdout is used.
     ;;
     ;; RANGE: A valid filename.
     ;; CONSISTENCY: This parameter is not checked for consistency.
     ;; DEFAULT VALUE: None.
     ;;
     (FilenameForMulticastChannelMapping  multicastChannelMapping.log)

     ;; PARAMETER: FederationSection.DataDistribution.MC02StrategyOptions.
     ;;            MaxNumberOfDataChannelsToUse
     ;; DESCRIPTION: This parameter is used to define the maximum number of data
     ;; channels to be used by the segmentation of all routing spaces.  A
     ;; larger number of channels may provide more effective segmentation of the
     ;; federation data, but for Best Effort traffic using UDP the segmentation
     ;; can be limited by the number of available multicast addresses (see
     ;; MulticastOptions in the FederationSection).  If the maximum number of
     ;; channels exceed the available multicast addresses the algorithm will
     ;; reuse the addresses and therefore reducing segmentation efficiency.
     ;; The TCP mechanism for Reliable traffic has a 2^32 limit on the number of
     ;; channels due to the fact that a 32 bit quantity is used to address the
     ;; data.
     ;; RANGE: An integer value greater than zero.
     ;; CONSISTENCY: This parameter is checked consistency across the
     ;;              federation.
     ;; DEFAULT_VALUE: 64
     ;;
     (MaxNumberOfDataChannelsToUse 3000)

     ;; PARAMETER: FederationSection.DataDistribution.MC02StrategyOptions.
     ;;            NumberOfSubspacePartitions
     ;; DESCRIPTION: This parameter defines the number of subspaces to create.
     ;; This is somewhat similar to the number of partitions for the first
     ;; dimension.
     ;; RANGE: An integer value greater than zero.
     ;; CONSISTENCY: This parameter is checked consistency across the
     ;;              federation.
     ;; DEFAULT_VALUE: 1
     (NumberOfSubspacePartitions 200

       ;; PARAMETER: FederationSection.DataDistribution.MC02StrategyOptions.
       ;;            NumberOfSubspacePartitions.default
       ;; DESCRIPTION: This parameter defines the default number of
       ;; partitions to create for the 2nd & 3rd dimensions of EACH of the
       ;; NumberOfSubspacePartitions partitions.
       ;; RANGE: An integer value greater than zero.
       ;; CONSISTENCY: This parameter is checked consistency across the
       ;;              federation.
       ;; DEFAULT_VALUE: 1
       (default 1)

       ;; PARAMETER: FederationSection.DataDistribution.MC02StrategyOptions.
       ;;            NumberOfSubspacePartitions.<Non-Negative Integer>
       ;; DESCRIPTION: You may specify the number of partitions to use for
       ;; the 2nd & 3rd dimensions each of the NumberOfSubspacePartitions
       ;; partitions.  Partition names are numbers from 0 to 
       ;; NumberOfSubspacePartitions - 1.  Partition names outside of this
       ;; range are ignored.
       ;; RANGE: An integer value greater than zero.
       ;; CONSISTENCY: This parameter is checked consistency across the
       ;;              federation.
       ;; DEFAULT_VALUE: <None>
       ;; Example: If NumberOfSubspacePartitions is 5 and default is 8 then
       ;;          the following entries:
       ;;(0 3)
       ;;(2 1)
       ;;(3 2)
       ;;(5 1)
       ;;          would cause the following partitioning:
       ;; Appspace    2D-NxN space
       ;;    0             3
       ;;    1             8
       ;;    2             1
       ;;    3             2
       ;;    4             8
       ;;
       ;; Note that the (5 1) entry is ignored in this case since
       ;; NumberOfSubspacePartitions has only 5 partitions.


	;; NOTE: these must correlate with ddm.rdr...

	(0  (clutter_control_space       (dimension1   1) (dimension2   1)))
	(1  (blue_air_space              (dimension1   1) (dimension2   1)))
	(2  (red_air_space               (dimension1   1) (dimension2   1)))
	(3  (green_air_space             (dimension1   1) (dimension2   1)))
	(4  (blue_sea_space              (dimension1   1) (dimension2   1)))
	(5  (red_sea_space               (dimension1   1) (dimension2   1)))
	(6  (green_sea_space             (dimension1   1) (dimension2   1)))

	;; for the DCEE ICT, reduce the number of multicast groups for the
	;; ground spaces to 1 instead of 15x15, basically because folks 
	;; want to play outside the playbox, but nobody wants to change any
	;; code.  THerefore, with perfect filtering turned off, if you 
	;; listen to any of the ground spaces, you get all of the entities
	;; in that space..
	;;
	;;(7  (blue_ground_space           (dimension1  15) (dimension2  15)))
	;;(8  (red_ground_space            (dimension1  15) (dimension2  15)))
	;;(9  (green_ground_space          (dimension1  15) (dimension2  15)))

	(7  (blue_ground_space           (dimension1   1) (dimension2   1)))
	(8  (red_ground_space            (dimension1   1) (dimension2   1)))
	(9  (green_ground_space          (dimension1   1) (dimension2   1)))

	;;(10 (human_space                 (dimension1   1) (dimension2   1)))
	(10 (blue_human_space                 (dimension1   1) (dimension2   1)))
	(11 (red_human_space                 (dimension1   1) (dimension2   1)))
	(12 (green_human_space                 (dimension1   1) (dimension2   1)))
	(13 (track_space                 (dimension1   1) (dimension2   4)))
	(14 (track_modification_space    (dimension1   1) (dimension2   4)))
	(15 (fire_space                  (dimension1   1) (dimension2   1)))
	(16 (detonation_space            (dimension1   1) (dimension2   1)))
	(17 (laser_space                 (dimension1   1) (dimension2   1)))
	(18 (emission_space              (dimension1  10) (dimension2   4)))
	(19 (iff_space                   (dimension1   1) (dimension2   1)))
	(20 (engineering_space           (dimension1   1) (dimension2   1)))
	(21 (radio_space                 (dimension1  25) (dimension2   1)))
	(22 (sensor_footprint_space      (dimension1   1) (dimension2   1)))
	(23 (sensor_detection_space      (dimension1   1) (dimension2   1)))
	(24 (contact_report_space        (dimension1   1) (dimension2   1)))
	(25 (ambient_environment_space   (dimension1   1) (dimension2   1)))
	(26 (local_environment_space     (dimension1   1) (dimension2   1)))
	;;(25 (c2_space                    (dimension1   1) (dimension2   1)))
	(27 (mission_status_space        (dimension1   1) (dimension2   1)))
	(28 (sigs_space                  (dimension1   1) (dimension2   1)))
	(29 (damage_assessment_space     (dimension1   1) (dimension2   1)))
	(30 (data_link_space             (dimension1   1) (dimension2   1)))
	(31 (warcon_space                (dimension1   1) (dimension2   1)))
	(32 (nonkinetic_space                (dimension1   1) (dimension2   1)))
	
	;;The following are the spaces that need to be added in for JSAF in TF07
	(33 (blip_space			 (dimension1   1) (dimension2   1)))
	(34 (set_comment_space		 (dimension1   1) (dimension2   1)))
	(35 (dynamic_terrain_space	 (dimension1   1) (dimension2   1)))
	(36 (fedstate_space		 (dimension1   1) (dimension2   1)))
        (37 (timesync_space              (dimension1   1) (dimension2   1)))
	(38 (clutter_intersection_space  (dimension1   1) (dimension2   1)))
	(39 (battlemaster_control_space  (dimension1   1) (dimension2   1)))
	(40 (target_space                (dimension1   1) (dimension2   1)))
	(41 (blue_aggregate_space        (dimension1   1) (dimension2   1)))
        (42 (red_aggregate_space         (dimension1   1) (dimension2   1)))
        (43 (green_aggregate_space       (dimension1   1) (dimension2   1)))
	(44 (surveil_order_space         (dimension1   1) (dimension2   1)))
	(45 (asset_manager_request_space (dimension1   1) (dimension2   1)))
        (46 (aar_space                   (dimension1   1) (dimension2   1)))
        (47 (attack_order_space          (dimension1   1) (dimension2   1)))
        (48 (contact_hierarchy_space     (dimension1   1) (dimension2   1)))
        (49 (collision_space             (dimension1   1) (dimension2   1)))
	(50 (stealth_space		 (dimension1   1) (dimension2   1)))
	(51 (uwa_emission_space		 (dimension1   1) (dimension2   1)))
        (52 (c2_broadcast_space          (dimension1   1) (dimension2   1)))
        (53 (c2_permission_space         (dimension1 257) (dimension2   1)))
        (54 (c2_request_space            (dimension1 127) (dimension2   1)))
        (55 (c2_scenario_space           (dimension1 257) (dimension2   1)))
        (56 (astabs_space                (dimension1   1) (dimension2   1)))	


       ;; everything else will default to 1 (from above).

     )
    );; End of ...DataDistribution.MC02StrategyOptions
   );; End of ...DataDistribution.Options
  );; End of FederationSection.DataDistribution

  (MOM
   ;; This section contains parameters related to MOM.

   ;; PARAMETER: FederationSection.MOM.MomServiceAvailable
   ;; DESCRIPTION: Although MOM services are very useful for federation
   ;; monitoring and control there is an overhead associated with MOM.  This
   ;; parameter allows a federation to turn off MOM services if they are not
   ;; being used within the federation.
   ;; RANGE: An enumeration value {Yes, No}.
   ;; CONSISTENCY: This parameter is checked for consistency across the federation.
   ;; DEFAULT_VALUE: Yes
   ;;
   ;;;;   (MomServiceAvailable Yes)

   ;; PARAMETER: FederationSection.MOM.MomTickingIntervalInSeconds
   ;; DESCRIPTION: This parameter is to control how often MOM will obtain
   ;; processing cycles to perform work.  It should be set at the maximum amount
   ;; of time the federation can tolerate for waiting for MOM responses.
   ;; RANGE: A floating point value greater than zero.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT_VALUE: 3.0
   ;;
   ;;;;   (MomTickingIntervalInSeconds 3.0)

   ;; PARAMETER: FederationSection.MOM.ExceptionLoggingFilePrefix
   ;; DESCRIPTION: This parameter specifies the file prefix for the exception
   ;; log.  The file is written into the federate's current directory and has
   ;; the form: <Prefix>_<fedName> where <fedName> is the federate identifier as
   ;; specified in the call to joinFederationExecution
   ;; RANGE: A valid file name.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT_VALUE: RtiMomExceptionLoggingFile
   ;;
   ;;;;   (ExceptionLoggingFilePrefix RtiMomExceptionLoggingFile)

   ;; PARAMETER: FederationSection.MOM.EnableServiceReporting
   ;; DESCRIPTION: This controls whether the federate has service reporting
   ;; enabled upon startup.
   ;; RANGE: An enumeration value {Yes, No}.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT_VALUE: No
   ;;
   ;;;;   (EnableServiceReporting No)

   ;; PARAMETER: FederationSection.MOM.DefaultManagerFederateObjectUpdateIntervalInSeconds
   ;; DESCRIPTION: This controls the default period for updating the Manager.Federate 
   ;; object.  The value marks number of seconds between each update and takes
   ;; an integer value >= 0.  A value of 0 disables updates.  This value can be overridden 
   ;; by using the Manager.Federate.Adjust.SetTiming MOM interaction during a federation run.
   ;; RANGE: An integer value >= 0.
   ;; CONSISTENCY: This parameter is not checked for consistency across the federation.
   ;; DEFAULT_VALUE: 0
   ;;
   (DefaultManagerFederateObjectUpdateIntervalInSeconds 15)
  );; End of FederationSection.MOM

  (Connectionless
    ;; Entries in this section apply to federation components when the RTI
    ;; is placed in connectionless mode.  The entries are not used in any
    ;; other mode.

    ;; PARAMETER: FederationSection.Connectionless.FederationAdminMulticastAddress
    ;; DESCRIPTION: Sets the multicast address used for federation
    ;; level administrative messages.
    ;; RANGE: Any valid IP multicast address, e.g., from 224.0.0.3 to 
    ;; 239.255.255.255
    ;; CONSISTENCY: This parameter is not checked for consistency across the federation, but needs to be.
    ;; DEFAULT_VALUE: 224.8.8.1
    ;;
    ;;;; (FederationAdminMulticastAddress 224.8.8.1)
   
    ;; PARAMETER: FederationSection.Connectionless.FederateHeartbeatInSeconds
    ;; DESCRIPTION: Sets rate, in seconds, at which local federate information is sent to other 
    ;; processes in the federation.
    ;; RANGE: A floating point number >= 1.0
    ;; CONSISTENCY: This parameter is not checked for consistency across the federation, but needs to be.
    ;; DEFAULT_VALUE: 30.0
    ;;
    ;;;; (FederateHeartbeatInSeconds 30.0)

    ;; PARAMETER: FederationSection.Connectionless.FederateTimeoutInSeconds
    ;; DESCRIPTION: Specifies how long a federate will go without receiving a heartbeat from
    ;; another federate before declaring that federate dead
    ;; RANGE: A floating point number >= FederateHeartbeatInSeconds + 1.0
    ;; CONSISTENCY: This parameter is not checked for consistency across the federation, but needs to be.
    ;; DEFAULT_VALUE: 60.0 or 2.0 * FederateHeartbeatInSeconds
    ;;
    ;;;; (FederateTimeoutInSeconds 60.0)

    ;; PARAMETER: FederationSection.Connectionless.FederationHandleLogFile
    ;; DESCRIPTION: Optional parameter that specifies a file to write the
    ;; the federation handle.  The HLA specification gives no interface
    ;; to access this value otherwise
    ;;
    ;; RANGE: A valid filename.
    ;; CONSISTENCY: This parameter is not checked for consistency.
    ;; DEFAULT VALUE: None.
    ;;
    (FederationHandleLogFile  federationHandle.log)

  );; End of FederationSection.Connectionless



 );; End of FederationSection
);; End of RTI





